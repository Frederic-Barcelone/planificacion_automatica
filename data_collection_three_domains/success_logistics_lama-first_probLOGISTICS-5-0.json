{
  "domain": "logistics",
  "planner": "lama-first",
  "problem": "probLOGISTICS-5-0.pddl",
  "timestamp": "2025-06-13T23:38:54.338319",
  "timeout_used": 1200,
  "solved": true,
  "time": 3.904524803161621,
  "plan": [
    "(load-truck obj23 tru2 pos2)",
    "(load-truck obj22 tru2 pos2)",
    "(load-truck obj13 tru1 pos1)",
    "(load-truck obj12 tru1 pos1)",
    "(load-truck obj11 tru1 pos1)",
    "(drive-truck tru1 pos1 apt1 cit1)",
    "(unload-truck obj13 tru1 apt1)",
    "(unload-truck obj12 tru1 apt1)",
    "(unload-truck obj11 tru1 apt1)",
    "(load-airplane obj13 apn1 apt1)",
    "(load-airplane obj12 apn1 apt1)",
    "(load-airplane obj11 apn1 apt1)",
    "(drive-truck tru2 pos2 apt2 cit2)",
    "(unload-truck obj23 tru2 apt2)",
    "(unload-truck obj22 tru2 apt2)",
    "(fly-airplane apn1 apt1 apt2)",
    "(load-airplane obj22 apn1 apt2)",
    "(unload-airplane obj13 apn1 apt2)",
    "(unload-airplane obj12 apn1 apt2)",
    "(load-truck obj12 tru2 apt2)",
    "(unload-airplane obj11 apn1 apt2)",
    "(load-truck obj11 tru2 apt2)",
    "(drive-truck tru2 apt2 pos2 cit2)",
    "(unload-truck obj12 tru2 pos2)",
    "(unload-truck obj11 tru2 pos2)",
    "(fly-airplane apn1 apt2 apt1)",
    "(unload-airplane obj22 apn1 apt1)"
  ],
  "plan_length": 27,
  "raw": {
    "result": {
      "call": "timeout 30 planutils run lama-first -- domain problem",
      "output": {
        "sas_plan": "(load-truck obj23 tru2 pos2)\n(load-truck obj22 tru2 pos2)\n(load-truck obj13 tru1 pos1)\n(load-truck obj12 tru1 pos1)\n(load-truck obj11 tru1 pos1)\n(drive-truck tru1 pos1 apt1 cit1)\n(unload-truck obj13 tru1 apt1)\n(unload-truck obj12 tru1 apt1)\n(unload-truck obj11 tru1 apt1)\n(load-airplane obj13 apn1 apt1)\n(load-airplane obj12 apn1 apt1)\n(load-airplane obj11 apn1 apt1)\n(drive-truck tru2 pos2 apt2 cit2)\n(unload-truck obj23 tru2 apt2)\n(unload-truck obj22 tru2 apt2)\n(fly-airplane apn1 apt1 apt2)\n(load-airplane obj22 apn1 apt2)\n(unload-airplane obj13 apn1 apt2)\n(unload-airplane obj12 apn1 apt2)\n(load-truck obj12 tru2 apt2)\n(unload-airplane obj11 apn1 apt2)\n(load-truck obj11 tru2 apt2)\n(drive-truck tru2 apt2 pos2 cit2)\n(unload-truck obj12 tru2 pos2)\n(unload-truck obj11 tru2 pos2)\n(fly-airplane apn1 apt2 apt1)\n(unload-airplane obj22 apn1 apt1)\n; cost = 27 (unit cost)\n"
      },
      "output_type": "generic",
      "stderr": "",
      "stdout": "INFO     planner time limit: None\nINFO     planner memory limit: None\n\nINFO     Running translator.\nINFO     translator stdin: None\nINFO     translator time limit: None\nINFO     translator memory limit: None\nINFO     translator command line string: /usr/bin/python3 /workspace/downward/builds/release/bin/translate/translate.py domain problem --sas-file output.sas\nParsing...\nParsing: [0.000s CPU, 0.003s wall-clock]\nNormalizing task... [0.000s CPU, 0.000s wall-clock]\nInstantiating...\nGenerating Datalog program... [0.000s CPU, 0.000s wall-clock]\nNormalizing Datalog program...\nNormalizing Datalog program: [0.010s CPU, 0.003s wall-clock]\nPreparing model... [0.000s CPU, 0.001s wall-clock]\nGenerated 33 rules.\nComputing model... [0.000s CPU, 0.003s wall-clock]\n198 relevant atoms\n156 auxiliary atoms\n354 final queue length\n399 total queue pushes\nCompleting instantiation... [0.000s CPU, 0.001s wall-clock]\nInstantiating: [0.010s CPU, 0.009s wall-clock]\nComputing fact groups...\nFinding invariants...\n6 initial candidates\nFinding invariants: [0.000s CPU, 0.001s wall-clock]\nChecking invariant weight... [0.000s CPU, 0.000s wall-clock]\nInstantiating groups... [0.000s CPU, 0.000s wall-clock]\nCollecting mutex groups... [0.000s CPU, 0.000s wall-clock]\nChoosing groups...\n0 uncovered facts\nChoosing groups: [0.000s CPU, 0.000s wall-clock]\nBuilding translation key... [0.000s CPU, 0.000s wall-clock]\nComputing fact groups: [0.000s CPU, 0.002s wall-clock]\nBuilding STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]\nBuilding dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]\nBuilding mutex information...\nBuilding mutex information: [0.000s CPU, 0.000s wall-clock]\nTranslating task...\nProcessing axioms...\nSimplifying axioms... [0.000s CPU, 0.000s wall-clock]\nTranslator axioms removed by simplifying: 0\nProcessing axioms: [0.000s CPU, 0.000s wall-clock]\nTranslating task: [0.010s CPU, 0.004s wall-clock]\n0 effect conditions simplified\n0 implied preconditions added\nDetecting unreachable propositions...\n0 operators removed\n0 axioms removed\n9 propositions removed\nDetecting unreachable propositions: [0.000s CPU, 0.002s wall-clock]\nReordering and filtering variables...\n8 of 9 variables necessary.\n0 of 9 mutex groups necessary.\n66 of 78 operators necessary.\n0 of 0 axiom rules necessary.\nReordering and filtering variables: [0.000s CPU, 0.000s wall-clock]\nTranslator variables: 8\nTranslator derived variables: 0\nTranslator facts: 41\nTranslator goal facts: 5\nTranslator mutex groups: 0\nTranslator total mutex groups size: 0\nTranslator operators: 66\nTranslator axioms: 0\nTranslator task size: 312\nTranslator peak memory: 32660 KB\nWriting output... [0.000s CPU, 0.001s wall-clock]\nDone! [0.020s CPU, 0.021s wall-clock]\ntranslate exit code: 0\n\nINFO     Running search (release).\nINFO     search stdin: output.sas\nINFO     search time limit: None\nINFO     search memory limit: None\nINFO     search command line string: /workspace/downward/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < output.sas\n[t=0.018301s, 12104 KB] reading input...\n[t=0.020047s, 12104 KB] done reading input!\n[t=0.027033s, 12368 KB] Initializing landmark sum heuristic...\n[t=0.027131s, 12368 KB] Generating landmark graph...\n[t=0.027154s, 12368 KB] Building a landmark graph with reasonable orders.\n[t=0.027171s, 12368 KB] Initializing Exploration...\n[t=0.027199s, 12368 KB] Generating landmarks using the RPG/SAS+ approach\n[t=0.027557s, 12368 KB] Landmarks generation time: 0.000409s\n[t=0.027586s, 12368 KB] Discovered 33 landmarks, of which 0 are disjunctive and 0 are conjunctive.\n[t=0.027597s, 12368 KB] 109 edges\n[t=0.027607s, 12368 KB] approx. reasonable orders\n[t=0.027711s, 12368 KB] Landmarks generation time: 0.000576s\n[t=0.027730s, 12368 KB] Discovered 33 landmarks, of which 0 are disjunctive and 0 are conjunctive.\n[t=0.027741s, 12368 KB] 111 edges\n[t=0.027756s, 12368 KB] Landmark graph generation time: 0.000635s\n[t=0.027772s, 12368 KB] Landmark graph contains 33 landmarks, of which 0 are disjunctive and 0 are conjunctive.\n[t=0.027782s, 12368 KB] Landmark graph contains 111 orderings.\n[t=0.027862s, 12368 KB] Simplifying 66 unary operators... done! [66 unary operators]\n[t=0.027910s, 12368 KB] time to simplify: 0.000063s\n[t=0.027936s, 12368 KB] Initializing additive heuristic...\n[t=0.027953s, 12368 KB] Initializing FF heuristic...\n[t=0.028000s, 12368 KB] Building successor generator...done!\n[t=0.028073s, 12368 KB] peak memory difference for successor generator creation: 0 KB\n[t=0.028089s, 12368 KB] time for successor generation creation: 0.000028s\n[t=0.028101s, 12368 KB] Variables: 8\n[t=0.028116s, 12368 KB] FactPairs: 41\n[t=0.028126s, 12368 KB] Bytes per state: 4\n[t=0.028163s, 12368 KB] Conducting lazy best first search, (real) bound = 2147483647\n[t=0.028226s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 27\n[t=0.028248s, 12504 KB] New best heuristic value for ff: 25\n[t=0.028264s, 12504 KB] g=0, 1 evaluated, 0 expanded\n[t=0.028289s, 12504 KB] Initial heuristic value for landmark_sum_heuristic: 27\n[t=0.028305s, 12504 KB] Initial heuristic value for ff: 25\n[t=0.028327s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 26\n[t=0.028343s, 12504 KB] g=1, 2 evaluated, 1 expanded\n[t=0.028366s, 12504 KB] New best heuristic value for ff: 24\n[t=0.028383s, 12504 KB] g=1, 3 evaluated, 2 expanded\n[t=0.028414s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 25\n[t=0.028430s, 12504 KB] g=2, 5 evaluated, 4 expanded\n[t=0.028452s, 12504 KB] New best heuristic value for ff: 23\n[t=0.028468s, 12504 KB] g=2, 6 evaluated, 5 expanded\n[t=0.028489s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 24\n[t=0.028505s, 12504 KB] g=3, 7 evaluated, 6 expanded\n[t=0.028558s, 12504 KB] New best heuristic value for ff: 22\n[t=0.028574s, 12504 KB] g=3, 12 evaluated, 11 expanded\n[t=0.028594s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 23\n[t=0.028610s, 12504 KB] g=4, 13 evaluated, 12 expanded\n[t=0.028663s, 12504 KB] New best heuristic value for ff: 21\n[t=0.028679s, 12504 KB] g=4, 18 evaluated, 17 expanded\n[t=0.028699s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 22\n[t=0.028715s, 12504 KB] g=5, 19 evaluated, 18 expanded\n[t=0.028767s, 12504 KB] New best heuristic value for ff: 20\n[t=0.028783s, 12504 KB] g=5, 24 evaluated, 23 expanded\n[t=0.028803s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 21\n[t=0.028818s, 12504 KB] g=6, 25 evaluated, 24 expanded\n[t=0.028854s, 12504 KB] New best heuristic value for ff: 19\n[t=0.028870s, 12504 KB] g=6, 28 evaluated, 27 expanded\n[t=0.028890s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 20\n[t=0.028906s, 12504 KB] g=7, 29 evaluated, 28 expanded\n[t=0.028942s, 12504 KB] New best heuristic value for ff: 18\n[t=0.028958s, 12504 KB] g=7, 32 evaluated, 31 expanded\n[t=0.028981s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 19\n[t=0.028997s, 12504 KB] g=8, 33 evaluated, 32 expanded\n[t=0.029033s, 12504 KB] New best heuristic value for ff: 17\n[t=0.029049s, 12504 KB] g=8, 36 evaluated, 35 expanded\n[t=0.029069s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 18\n[t=0.029084s, 12504 KB] g=9, 37 evaluated, 36 expanded\n[t=0.029122s, 12504 KB] New best heuristic value for ff: 16\n[t=0.029137s, 12504 KB] g=9, 40 evaluated, 39 expanded\n[t=0.029157s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 17\n[t=0.029173s, 12504 KB] g=10, 41 evaluated, 40 expanded\n[t=0.029218s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 16\n[t=0.029234s, 12504 KB] g=11, 45 evaluated, 44 expanded\n[t=0.029253s, 12504 KB] New best heuristic value for ff: 15\n[t=0.029269s, 12504 KB] g=10, 46 evaluated, 45 expanded\n[t=0.029315s, 12504 KB] New best heuristic value for ff: 14\n[t=0.029330s, 12504 KB] g=11, 50 evaluated, 49 expanded\n[t=0.029350s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 15\n[t=0.029366s, 12504 KB] g=13, 51 evaluated, 50 expanded\n[t=0.029417s, 12504 KB] New best heuristic value for ff: 13\n[t=0.029433s, 12504 KB] g=12, 56 evaluated, 55 expanded\n[t=0.029453s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 14\n[t=0.029468s, 12504 KB] g=13, 57 evaluated, 56 expanded\n[t=0.029496s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 13\n[t=0.029512s, 12504 KB] New best heuristic value for ff: 12\n[t=0.029523s, 12504 KB] g=14, 59 evaluated, 58 expanded\n[t=0.029554s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 12\n[t=0.029571s, 12504 KB] New best heuristic value for ff: 11\n[t=0.029581s, 12504 KB] g=15, 61 evaluated, 60 expanded\n[t=0.029616s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 11\n[t=0.029644s, 12504 KB] g=16, 63 evaluated, 62 expanded\n[t=0.029696s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 10\n[t=0.029715s, 12504 KB] New best heuristic value for ff: 10\n[t=0.029726s, 12504 KB] g=17, 65 evaluated, 64 expanded\n[t=0.029766s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 9\n[t=0.029783s, 12504 KB] New best heuristic value for ff: 9\n[t=0.029793s, 12504 KB] g=18, 68 evaluated, 67 expanded\n[t=0.029833s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 8\n[t=0.029850s, 12504 KB] New best heuristic value for ff: 8\n[t=0.029860s, 12504 KB] g=19, 71 evaluated, 70 expanded\n[t=0.029888s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 7\n[t=0.029904s, 12504 KB] New best heuristic value for ff: 7\n[t=0.029915s, 12504 KB] g=20, 73 evaluated, 72 expanded\n[t=0.029953s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 6\n[t=0.029969s, 12504 KB] New best heuristic value for ff: 6\n[t=0.029980s, 12504 KB] g=21, 76 evaluated, 75 expanded\n[t=0.030010s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 5\n[t=0.030026s, 12504 KB] New best heuristic value for ff: 5\n[t=0.030036s, 12504 KB] g=22, 78 evaluated, 77 expanded\n[t=0.030059s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 4\n[t=0.030075s, 12504 KB] New best heuristic value for ff: 4\n[t=0.030086s, 12504 KB] g=23, 79 evaluated, 78 expanded\n[t=0.030108s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 3\n[t=0.030124s, 12504 KB] New best heuristic value for ff: 3\n[t=0.030135s, 12504 KB] g=24, 80 evaluated, 79 expanded\n[t=0.030157s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 2\n[t=0.030173s, 12504 KB] New best heuristic value for ff: 2\n[t=0.030183s, 12504 KB] g=25, 81 evaluated, 80 expanded\n[t=0.030225s, 12504 KB] New best heuristic value for landmark_sum_heuristic: 1\n[t=0.030242s, 12504 KB] New best heuristic value for ff: 1\n[t=0.030264s, 12504 KB] g=26, 82 evaluated, 81 expanded\n[t=0.030282s, 12504 KB] Solution found!\n[t=0.030298s, 12504 KB] Actual search time: 0.002105s\nload-truck obj23 tru2 pos2 (1)\nload-truck obj22 tru2 pos2 (1)\nload-truck obj13 tru1 pos1 (1)\nload-truck obj12 tru1 pos1 (1)\nload-truck obj11 tru1 pos1 (1)\ndrive-truck tru1 pos1 apt1 cit1 (1)\nunload-truck obj13 tru1 apt1 (1)\nunload-truck obj12 tru1 apt1 (1)\nunload-truck obj11 tru1 apt1 (1)\nload-airplane obj13 apn1 apt1 (1)\nload-airplane obj12 apn1 apt1 (1)\nload-airplane obj11 apn1 apt1 (1)\ndrive-truck tru2 pos2 apt2 cit2 (1)\nunload-truck obj23 tru2 apt2 (1)\nunload-truck obj22 tru2 apt2 (1)\nfly-airplane apn1 apt1 apt2 (1)\nload-airplane obj22 apn1 apt2 (1)\nunload-airplane obj13 apn1 apt2 (1)\nunload-airplane obj12 apn1 apt2 (1)\nload-truck obj12 tru2 apt2 (1)\nunload-airplane obj11 apn1 apt2 (1)\nload-truck obj11 tru2 apt2 (1)\ndrive-truck tru2 apt2 pos2 cit2 (1)\nunload-truck obj12 tru2 pos2 (1)\nunload-truck obj11 tru2 pos2 (1)\nfly-airplane apn1 apt2 apt1 (1)\nunload-airplane obj22 apn1 apt1 (1)\n[t=0.030313s, 12504 KB] Plan length: 27 step(s).\n[t=0.030313s, 12504 KB] Plan cost: 27\n[t=0.030313s, 12504 KB] Expanded 82 state(s).\n[t=0.030313s, 12504 KB] Reopened 0 state(s).\n[t=0.030313s, 12504 KB] Evaluated 83 state(s).\n[t=0.030313s, 12504 KB] Evaluations: 166\n[t=0.030313s, 12504 KB] Generated 660 state(s).\n[t=0.030313s, 12504 KB] Dead ends: 0 state(s).\n[t=0.030313s, 12504 KB] Number of registered states: 83\n[t=0.030313s, 12504 KB] Int hash set load factor: 83/128 = 0.648438\n[t=0.030313s, 12504 KB] Int hash set resizes: 7\n[t=0.030313s, 12504 KB] Search time: 0.002151s\n[t=0.030313s, 12504 KB] Total time: 0.030313s\nSolution found.\nPeak memory: 12504 KB\nRemove intermediate file output.sas\nsearch exit code: 0\n\nINFO     Planner time: 0.43s\n"
    },
    "status": "ok"
  },
  "error": null,
  "progress_info": {}
}