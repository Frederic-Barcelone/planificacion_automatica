{
  "domain": "logistics",
  "planner": "delfi",
  "problem": "probLOGISTICS-5-0.pddl",
  "timestamp": "2025-06-14T12:22:27.491890",
  "timeout_used": 480,
  "solved": true,
  "time": 9.222563028335571,
  "plan": [
    "(load-truck obj23 tru2 pos2)",
    "(load-truck obj22 tru2 pos2)",
    "(drive-truck tru2 pos2 apt2 cit2)",
    "(unload-truck obj23 tru2 apt2)",
    "(unload-truck obj22 tru2 apt2)",
    "(load-truck obj13 tru1 pos1)",
    "(load-truck obj12 tru1 pos1)",
    "(load-truck obj11 tru1 pos1)",
    "(drive-truck tru1 pos1 apt1 cit1)",
    "(unload-truck obj13 tru1 apt1)",
    "(unload-truck obj12 tru1 apt1)",
    "(unload-truck obj11 tru1 apt1)",
    "(load-airplane obj13 apn1 apt1)",
    "(load-airplane obj12 apn1 apt1)",
    "(load-airplane obj11 apn1 apt1)",
    "(fly-airplane apn1 apt1 apt2)",
    "(load-airplane obj22 apn1 apt2)",
    "(unload-airplane obj13 apn1 apt2)",
    "(unload-airplane obj12 apn1 apt2)",
    "(load-truck obj12 tru2 apt2)",
    "(unload-airplane obj11 apn1 apt2)",
    "(load-truck obj11 tru2 apt2)",
    "(drive-truck tru2 apt2 pos2 cit2)",
    "(unload-truck obj12 tru2 pos2)",
    "(unload-truck obj11 tru2 pos2)",
    "(fly-airplane apn1 apt2 apt1)",
    "(unload-airplane obj22 apn1 apt1)"
  ],
  "plan_length": 27,
  "raw": {
    "result": {
      "call": "timeout 30 planutils run delfi -- domain problem plan",
      "output": {
        "plan": "(load-truck obj23 tru2 pos2)\n(load-truck obj22 tru2 pos2)\n(drive-truck tru2 pos2 apt2 cit2)\n(unload-truck obj23 tru2 apt2)\n(unload-truck obj22 tru2 apt2)\n(load-truck obj13 tru1 pos1)\n(load-truck obj12 tru1 pos1)\n(load-truck obj11 tru1 pos1)\n(drive-truck tru1 pos1 apt1 cit1)\n(unload-truck obj13 tru1 apt1)\n(unload-truck obj12 tru1 apt1)\n(unload-truck obj11 tru1 apt1)\n(load-airplane obj13 apn1 apt1)\n(load-airplane obj12 apn1 apt1)\n(load-airplane obj11 apn1 apt1)\n(fly-airplane apn1 apt1 apt2)\n(load-airplane obj22 apn1 apt2)\n(unload-airplane obj13 apn1 apt2)\n(unload-airplane obj12 apn1 apt2)\n(load-truck obj12 tru2 apt2)\n(unload-airplane obj11 apn1 apt2)\n(load-truck obj11 tru2 apt2)\n(drive-truck tru2 apt2 pos2 cit2)\n(unload-truck obj12 tru2 pos2)\n(unload-truck obj11 tru2 pos2)\n(fly-airplane apn1 apt2 apt1)\n(unload-airplane obj22 apn1 apt1)\n; cost = 27 (unit cost)\n"
      },
      "output_type": "generic",
      "stderr": "Using TensorFlow backend.\n",
      "stdout": "Parsing pddl.....\nParsing pddl..: [0.000s CPU, 0.003s wall-clock]\nNormalizing task.....\nNormalizing task..: [0.000s CPU, 0.000s wall-clock]\nCreating abstract structure graph.....\nCreating abstract structure graph..: [0.000s CPU, 0.002s wall-clock]\nComputing image from given graph...\nUsing graph input file /tmp/tmppnguyj77/abstract-structure-graph.txt\nUsing image output directory /tmp/tmppnguyj77\nWriting abstract structure graph grayscale 8bit image.....\nGrayscale color: 255\nCreating matrix for a graph with 194 nodes..\nMatrix size when created: 304200\nMatrix created, filling with values for edges..\nPerforming bolding.\nMatrix size when 1s added: 304200\nNumber of graph nodes: 195\nShrink ratio: 3\nShrinking matrix to size 65x65..\nShrinked matrix size when created: 33800\nWriting grayscale image of size 128x128 ..\nWriting abstract structure graph grayscale 8bit image..: [0.190s CPU, 0.029s wall-clock]\nDone computing image! [0.220s CPU, 0.032s wall-clock]\n\n==== Computing an abstract structure graph from the lifted task description... ====\n\n\n==== Done computing an abstract structure graph. ====\n\n\n==== Selecting planner from learned model... ====\n\nUsing json model file /workspace/delfi/dl_model/models/lifted/model.json\nUsing h5 model file /workspace/delfi/dl_model/models/lifted/model.h5\nLoaded model from disk\nChose 31d1eefdbeca-simpless-dks-masb50kmiasmdfp\n\n==== Done selecting planner from learned model. ====\n\n\n==== Running the selected planner... ====\n\nRunning planner, call string: ['/usr/bin/python', '/workspace/delfi/fast-downward.py', '--build', 'release64', '--search-memory-limit', '7600M', '--plan-file', 'plan', 'domain', 'problem', '--symmetries', 'sym=structural_symmetries(search_symmetries=dks)', '--search', 'astar(merge_and_shrink(shrink_strategy=shrink_bisimulation(greedy=false),merge_strategy=merge_precomputed(merge_tree=miasm(abstraction=miasm_merge_and_shrink(),fallback_merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order(atomic_ts_order=reverse_level,product_ts_order=new_to_old,atomic_before_product=false)]))),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=50000,threshold_before_merge=1,max_time=900),symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)']\nINFO     Running translator.\nINFO     translator input: ['domain', 'problem']\nINFO     translator arguments: []\nINFO     translator time limit: None\nINFO     translator memory limit: None\nINFO     callstring: /usr/bin/python /workspace/delfi/builds/release64/bin/translate/translate.py domain problem\nParsing...\nParsing: [0.000s CPU, 0.002s wall-clock]\nNormalizing task... [0.000s CPU, 0.000s wall-clock]\nInstantiating...\nGenerating Datalog program... [0.000s CPU, 0.000s wall-clock]\nNormalizing Datalog program...\nNormalizing Datalog program: [0.000s CPU, 0.003s wall-clock]\nPreparing model... [0.010s CPU, 0.001s wall-clock]\nGenerated 33 rules.\nComputing model... [0.000s CPU, 0.004s wall-clock]\n198 relevant atoms\n156 auxiliary atoms\n354 final queue length\n399 total queue pushes\nCompleting instantiation... [0.000s CPU, 0.002s wall-clock]\nInstantiating: [0.010s CPU, 0.011s wall-clock]\nComputing fact groups...\nFinding invariants...\n6 initial candidates\nFinding invariants: [0.000s CPU, 0.002s wall-clock]\nChecking invariant weight... [0.000s CPU, 0.000s wall-clock]\nInstantiating groups... [0.000s CPU, 0.000s wall-clock]\nCollecting mutex groups... [0.000s CPU, 0.000s wall-clock]\nChoosing groups...\n0 uncovered facts\nChoosing groups: [0.000s CPU, 0.000s wall-clock]\nBuilding translation key... [0.000s CPU, 0.000s wall-clock]\nComputing fact groups: [0.010s CPU, 0.003s wall-clock]\nBuilding STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]\nBuilding dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]\nBuilding mutex information...\nBuilding mutex information: [0.000s CPU, 0.000s wall-clock]\nTranslating task...\nProcessing axioms...\nSimplifying axioms... [0.000s CPU, 0.000s wall-clock]\nProcessing axioms: [0.000s CPU, 0.000s wall-clock]\nTranslating task: [0.000s CPU, 0.003s wall-clock]\n0 effect conditions simplified\n0 implied preconditions added\nDetecting unreachable propositions...\n0 operators removed\n0 axioms removed\n9 propositions removed\nDetecting unreachable propositions: [0.000s CPU, 0.002s wall-clock]\nReordering and filtering variables...\n8 of 9 variables necessary.\n0 of 9 mutex groups necessary.\n66 of 78 operators necessary.\n0 of 0 axiom rules necessary.\nReordering and filtering variables: [0.000s CPU, 0.000s wall-clock]\nTranslator variables: 8\nTranslator derived variables: 0\nTranslator facts: 41\nTranslator goal facts: 5\nTranslator mutex groups: 0\nTranslator total mutex groups size: 0\nTranslator operators: 66\nTranslator axioms: 0\nTranslator task size: 312\nTranslator peak memory: 27828 KB\nWriting output... [0.000s CPU, 0.001s wall-clock]\nDone! [0.020s CPU, 0.022s wall-clock]\nINFO     Running search (release64).\nINFO     search input: output.sas\nINFO     search arguments: ['--symmetries', 'sym=structural_symmetries(search_symmetries=dks)', '--search', 'astar(merge_and_shrink(shrink_strategy=shrink_bisimulation(greedy=false),merge_strategy=merge_precomputed(merge_tree=miasm(abstraction=miasm_merge_and_shrink(),fallback_merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order(atomic_ts_order=reverse_level,product_ts_order=new_to_old,atomic_before_product=false)]))),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=50000,threshold_before_merge=1,max_time=900),symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)']\nINFO     search time limit: None\nINFO     search memory limit: 7600 MB\nINFO     search executable: /workspace/delfi/builds/release64/bin/downward\nINFO     callstring: /workspace/delfi/builds/release64/bin/downward --symmetries 'sym=structural_symmetries(search_symmetries=dks)' --search 'astar(merge_and_shrink(shrink_strategy=shrink_bisimulation(greedy=false),merge_strategy=merge_precomputed(merge_tree=miasm(abstraction=miasm_merge_and_shrink(),fallback_merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order(atomic_ts_order=reverse_level,product_ts_order=new_to_old,atomic_before_product=false)]))),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=50000,threshold_before_merge=1,max_time=900),symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)' --internal-plan-file plan < output.sas\nreading input... [t=5.0555e-05s]\ndone reading input! [t=0.000351109s]\npacking state variables...done! [t=0.000360927s]\nVariables: 8\nFactPairs: 41\nBytes per state: 4\nBuilding successor generator...done! [t=0.000515316s]\npeak memory difference for root successor generator creation: 0 KB\ntime for root successor generation creation: 2.3293e-05s\ndone initializing global data [t=0.000549721s]\nInitializing merge-and-shrink heuristic...\nMerge strategy options:\nType: precomputed\nMerge tree options: \nType: miasm\nUpdate option: use random\n\nOptions related to size limits and shrinking: \nTransition system size limit: 50000\nTransition system size limit right before merge: 50000\nThreshold to trigger shrinking right before merge: 1\n\nShrink strategy options: \nType: bisimulation\nBisimulation type: exact\nAt limit: return\n\nLabel reduction options:\nBefore merging: disabled\nBefore shrinking: enabled\nMethod: all transition systems with fixpoint computation\nSystem order: random\n\nVerbosity: verbose\n\nBuilding atomic transition systems... \ndone initializing transition system data 0.000264135\ndone building transitions 0.000369031\ndone creating transition systems 0.000416721\ndone creating mas representations 0.000423393\ndone creating distances 0.000425207\nAtomic transition system #0: computing init and goal distances using unit-cost algorithm\nAtomic transition system #1: computing init and goal distances using unit-cost algorithm\nAtomic transition system #2: computing init and goal distances using unit-cost algorithm\nAtomic transition system #3: computing init and goal distances using unit-cost algorithm\nAtomic transition system #4: computing init and goal distances using unit-cost algorithm\nAtomic transition system #5: computing init and goal distances using unit-cost algorithm\nAtomic transition system #6: computing init and goal distances using unit-cost algorithm\nAtomic transition system #7: computing init and goal distances using unit-cost algorithm\ndone creating FTS 0.000463929\nAtomic transition system #0: not applying abstraction (same number of states)\nAtomic transition system #1: not applying abstraction (same number of states)\nAtomic transition system #2: not applying abstraction (same number of states)\nAtomic transition system #3: not applying abstraction (same number of states)\nAtomic transition system #4: not applying abstraction (same number of states)\nAtomic transition system #5: not applying abstraction (same number of states)\nAtomic transition system #6: not applying abstraction (same number of states)\nAtomic transition system #7: not applying abstraction (same number of states)\nt=0.000477745s (after computation of atomic transition systems)\n\nbuilding causal graph...done! [t=1.3024e-05s]\ndone initializing transition system data 0.000125926\ndone building transitions 0.000217427\ndone creating transition systems 0.000248947\ndone creating mas representations 0.00025631\ndone creating distances 0.000257974\ndone creating FTS 0.000273542\nFound a trivial variable partitioning, using fallback merge strategy\nNext pair of indices: (0, 3)\nAtomic transition system #0: 2 states, 6 arcs \nAtomic transition system #0: init h=0\nAtomic transition system #3: 7 states, 19 arcs \nAtomic transition system #3: init h=2\nt=0.000964147s (after computation of next merge)\nLabel reduction: 66 labels, 60 after reduction\nLabel reduction: 60 labels, 59 after reduction\nLabel reduction: 59 labels, 58 after reduction\nLabel reduction: 58 labels, 57 after reduction\nLabel reduction: 57 labels, 51 after reduction\nLabel reduction: 51 labels, 45 after reduction\nLabel reduction: 45 labels, 39 after reduction\nLabel reduction: 39 labels, 33 after reduction\nt=0.00142388s (after label reduction)\nAtomic transition system #0: current size: 2 (shrink threshold: 1)\nAtomic transition system #0: not applying abstraction (same number of states)\nAtomic transition system #3: current size: 7 (shrink threshold: 1)\nAtomic transition system #3: not applying abstraction (same number of states)\nMerging atomic transition system #0 and atomic transition system #3\nComposite transition system with 2/8 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 2/8 vars: 14 states, 62 arcs \nComposite transition system with 2/8 vars: init h=3\nDifference of init h values: 1\nt=0.00149349s (after merging)\nComposite transition system with 2/8 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 264 KB\n\nNext pair of indices: (2, 8)\nAtomic transition system #2: 2 states, 6 arcs \nAtomic transition system #2: init h=0\nComposite transition system with 2/8 vars: 14 states, 62 arcs \nComposite transition system with 2/8 vars: init h=3\nt=0.00154295s (after computation of next merge)\nLabel reduction: 33 labels, 31 after reduction\nt=0.0017613s (after label reduction)\nAtomic transition system #2: current size: 2 (shrink threshold: 1)\nAtomic transition system #2: not applying abstraction (same number of states)\nComposite transition system with 2/8 vars: current size: 14 (shrink threshold: 1)\nComposite transition system with 2/8 vars: not applying abstraction (same number of states)\nMerging atomic transition system #2 and composite transition system with 2/8 vars\nComposite transition system with 3/8 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 3/8 vars: 28 states, 172 arcs \nComposite transition system with 3/8 vars: init h=3\nDifference of init h values: 0\nt=0.00181716s (after merging)\nComposite transition system with 3/8 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 264 KB\n\nNext pair of indices: (4, 9)\nAtomic transition system #4: 7 states, 19 arcs \nAtomic transition system #4: init h=4\nComposite transition system with 3/8 vars: 28 states, 172 arcs \nComposite transition system with 3/8 vars: init h=3\nt=0.00185969s (after computation of next merge)\nLabel reduction: 31 labels, 28 after reduction\nt=0.00197786s (after label reduction)\nAtomic transition system #4: current size: 7 (shrink threshold: 1)\nAtomic transition system #4: not applying abstraction (same number of states)\nComposite transition system with 3/8 vars: current size: 28 (shrink threshold: 1)\nComposite transition system with 3/8 vars: not applying abstraction (same number of states)\nMerging atomic transition system #4 and composite transition system with 3/8 vars\nComposite transition system with 4/8 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 4/8 vars: 196 states, 1428 arcs \nComposite transition system with 4/8 vars: init h=9\nDifference of init h values: 5\nt=0.00215415s (after merging)\nComposite transition system with 4/8 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 264 KB\n\nNext pair of indices: (1, 10)\nAtomic transition system #1: 2 states, 6 arcs \nAtomic transition system #1: init h=0\nComposite transition system with 4/8 vars: 196 states, 1428 arcs \nComposite transition system with 4/8 vars: init h=9\nt=0.00221989s (after computation of next merge)\nLabel reduction: 28 labels, 22 after reduction\nt=0.00240375s (after label reduction)\nAtomic transition system #1: current size: 2 (shrink threshold: 1)\nAtomic transition system #1: not applying abstraction (same number of states)\nComposite transition system with 4/8 vars: current size: 196 (shrink threshold: 1)\nComposite transition system with 4/8 vars: not applying abstraction (same number of states)\nMerging atomic transition system #1 and composite transition system with 4/8 vars\nComposite transition system with 5/8 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 5/8 vars: 392 states, 3024 arcs \nComposite transition system with 5/8 vars: init h=9\nDifference of init h values: 0\nt=0.00302501s (after merging)\nComposite transition system with 5/8 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 264 KB\n\nNext pair of indices: (5, 11)\nAtomic transition system #5: 7 states, 19 arcs \nAtomic transition system #5: init h=4\nComposite transition system with 5/8 vars: 392 states, 3024 arcs \nComposite transition system with 5/8 vars: init h=9\nt=0.0031172s (after computation of next merge)\nLabel reduction: 22 labels, 19 after reduction\nt=0.00336689s (after label reduction)\nAtomic transition system #5: current size: 7 (shrink threshold: 1)\nAtomic transition system #5: not applying abstraction (same number of states)\nComposite transition system with 5/8 vars: current size: 392 (shrink threshold: 1)\nComposite transition system with 5/8 vars: not applying abstraction (same number of states)\nMerging atomic transition system #5 and composite transition system with 5/8 vars\nComposite transition system with 6/8 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 6/8 vars: 2744 states, 23520 arcs \nComposite transition system with 6/8 vars: init h=14\nDifference of init h values: 5\nt=0.0063029s (after merging)\nComposite transition system with 6/8 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 564 KB\n\nNext pair of indices: (6, 12)\nAtomic transition system #6: 7 states, 19 arcs \nAtomic transition system #6: init h=6\nComposite transition system with 6/8 vars: 2744 states, 23520 arcs \nComposite transition system with 6/8 vars: init h=14\nt=0.00660809s (after computation of next merge)\nLabel reduction: 19 labels, 13 after reduction\nt=0.00938412s (after label reduction)\nAtomic transition system #6: current size: 7 (shrink threshold: 1)\nAtomic transition system #6: not applying abstraction (same number of states)\nComposite transition system with 6/8 vars: current size: 2744 (shrink threshold: 1)\nComposite transition system with 6/8 vars: applying abstraction (2744 to 1568 states)\nComposite transition system with 6/8 vars: simplification was not f-preserving!\nComposite transition system with 6/8 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 6/8 vars: 1568 states, 13104 arcs \nComposite transition system with 6/8 vars: init h=14\nt=0.0193608s (after shrinking)\nMerging atomic transition system #6 and composite transition system with 6/8 vars\nComposite transition system with 7/8 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 7/8 vars: 10976 states, 101136 arcs \nComposite transition system with 7/8 vars: init h=21\nDifference of init h values: 7\nt=0.0289849s (after merging)\nComposite transition system with 7/8 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 2164 KB\n\nNext pair of indices: (7, 13)\nAtomic transition system #7: 7 states, 19 arcs \nAtomic transition system #7: init h=6\nComposite transition system with 7/8 vars: 10976 states, 101136 arcs \nComposite transition system with 7/8 vars: init h=21\nt=0.0299051s (after computation of next merge)\nLabel reduction: 13 labels, 7 after reduction\nt=0.0412494s (after label reduction)\nAtomic transition system #7: current size: 7 (shrink threshold: 1)\nAtomic transition system #7: not applying abstraction (same number of states)\nComposite transition system with 7/8 vars: current size: 10976 (new size limit: 7142)\nComposite transition system with 7/8 vars: applying abstraction (10976 to 6878 states)\nComposite transition system with 7/8 vars: simplification was not f-preserving!\nComposite transition system with 7/8 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 7/8 vars: 6878 states, 65970 arcs \nComposite transition system with 7/8 vars: init h=21\nt=0.0720294s (after shrinking)\nnot perfect anymore in iteration 6\nMerging atomic transition system #7 and composite transition system with 7/8 vars\nComposite transition system with 8/8 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 8/8 vars: 48146 states, 358620 arcs \nComposite transition system with 8/8 vars: init h=27\nDifference of init h values: 6\nt=0.107202s (after merging)\nComposite transition system with 8/8 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 7428 KB\n\nIterations with merge tiebreaking: 6\nTotal tiebreaking merge candidates: 29\nFinal transition system size: 48146\nMaximum intermediate abstraction size: 48146\nMaximum intermediate number of transitions: 358620\nInit h value improvements: [1, 0, 5, 0, 5, 7, 6]\nCourse of label reduction: [66, 33, 31, 28, 22, 19, 13, 7]\nCourse of miss qualified states shrinking: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.186224]\nAverage imperfect shrinking: 0.0133017\nMerge order: [(0, 3), (2, 8), (4, 9), (1, 10), (5, 11), (6, 12), (7, 13)]\nLinear merge order\nRelative pruning per iteration: [0, 0, 0, 0, 0, 0, 0]\nAverage relative pruning: 0\nNumber of attempts to merge for symmetries: 0\nNumber of times non-perfect shrinking interfered merging for symmetries: 0\nNumber of times pruning interfered merging for symmetries: 0\nNumber of times merging for symmetries failed for any reason: 0\nFinal peak memory increase of merge-and-shrink computation: 7428 KB\nDone initializing merge-and-shrink heuristic [0.111343s]\n\nInitializing symmetries (eager search)\nInitializing symmetries\nUsing Bliss to find group generators\nDone initializing symmetries: 0.00015996s\nNumber of generators: 2\nNumber of identity generators (on states, not on operators): 0\nOrder of generators: [2, 2]\nSetting group in registry for DKS search\nConducting best first search with reopening closed nodes, (real) bound = 2147483647\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 27\n[g=0, 1 evaluated, 0 expanded, t=0.112731s, 12820 KB]\nf = 27 [1 evaluated, 0 expanded, t=0.112756s, 12820 KB]\nInitial heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 27\npruning method: stubborn sets simple\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 26\n[g=1, 3 evaluated, 1 expanded, t=0.112879s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 25\n[g=2, 10 evaluated, 2 expanded, t=0.112912s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 24\n[g=3, 15 evaluated, 3 expanded, t=0.112937s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 23\n[g=4, 20 evaluated, 4 expanded, t=0.112967s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 22\n[g=5, 27 evaluated, 5 expanded, t=0.112999s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 21\n[g=6, 34 evaluated, 6 expanded, t=0.113029s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 20\n[g=7, 40 evaluated, 7 expanded, t=0.113059s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 19\n[g=8, 46 evaluated, 8 expanded, t=0.113086s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 18\n[g=9, 51 evaluated, 9 expanded, t=0.113108s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 17\n[g=10, 57 evaluated, 10 expanded, t=0.113136s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 16\n[g=11, 64 evaluated, 11 expanded, t=0.113168s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 15\n[g=12, 71 evaluated, 12 expanded, t=0.113198s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 14\n[g=13, 81 evaluated, 13 expanded, t=0.113232s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 13\n[g=14, 88 evaluated, 14 expanded, t=0.113258s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 12\n[g=15, 95 evaluated, 15 expanded, t=0.113289s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 11\n[g=16, 100 evaluated, 16 expanded, t=0.113318s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 10\n[g=17, 107 evaluated, 17 expanded, t=0.113349s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 9\n[g=18, 115 evaluated, 18 expanded, t=0.1134s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 8\n[g=19, 121 evaluated, 19 expanded, t=0.113436s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 7\n[g=20, 124 evaluated, 20 expanded, t=0.113461s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 6\n[g=21, 135 evaluated, 21 expanded, t=0.113497s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 5\n[g=22, 138 evaluated, 22 expanded, t=0.113521s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 4\n[g=23, 143 evaluated, 23 expanded, t=0.113546s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 3\n[g=24, 149 evaluated, 24 expanded, t=0.113574s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 2\n[g=25, 155 evaluated, 25 expanded, t=0.113597s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 1\n[g=26, 162 evaluated, 26 expanded, t=0.113632s, 12820 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 0\n[g=27, 167 evaluated, 27 expanded, t=0.113658s, 12820 KB]\nSolution found!\nActual search time: 0.000899908s [t=0.113761s]\nload-truck obj23 tru2 pos2 (1)\nload-truck obj22 tru2 pos2 (1)\ndrive-truck tru2 pos2 apt2 cit2 (1)\nunload-truck obj23 tru2 apt2 (1)\nunload-truck obj22 tru2 apt2 (1)\nload-truck obj13 tru1 pos1 (1)\nload-truck obj12 tru1 pos1 (1)\nload-truck obj11 tru1 pos1 (1)\ndrive-truck tru1 pos1 apt1 cit1 (1)\nunload-truck obj13 tru1 apt1 (1)\nunload-truck obj12 tru1 apt1 (1)\nunload-truck obj11 tru1 apt1 (1)\nload-airplane obj13 apn1 apt1 (1)\nload-airplane obj12 apn1 apt1 (1)\nload-airplane obj11 apn1 apt1 (1)\nfly-airplane apn1 apt1 apt2 (1)\nload-airplane obj22 apn1 apt2 (1)\nunload-airplane obj13 apn1 apt2 (1)\nunload-airplane obj12 apn1 apt2 (1)\nload-truck obj12 tru2 apt2 (1)\nunload-airplane obj11 apn1 apt2 (1)\nload-truck obj11 tru2 apt2 (1)\ndrive-truck tru2 apt2 pos2 cit2 (1)\nunload-truck obj12 tru2 pos2 (1)\nunload-truck obj11 tru2 pos2 (1)\nfly-airplane apn1 apt2 apt1 (1)\nunload-airplane obj22 apn1 apt1 (1)\nPlan length: 27 step(s).\nPlan cost: 27\nExpanded 28 state(s).\nReopened 0 state(s).\nEvaluated 167 state(s).\nEvaluations: 167\nGenerated 238 state(s).\nDead ends: 0 state(s).\nExpanded until last jump: 0 state(s).\nReopened until last jump: 0 state(s).\nEvaluated until last jump: 1 state(s).\nGenerated until last jump: 0 state(s).\nNumber of registered states: 167\ntotal successors before partial-order reduction: 238\ntotal successors after partial-order reduction: 238\nSearch time: 0.00105985s\nTotal time: 0.113765s\nSolution found.\nPeak memory: 12820 KB\nOverall time: [0.230s CPU, 0.232s wall-clock]\n\n==== Done running the selected planner. ====\n\n"
    },
    "status": "ok"
  },
  "error": null,
  "progress_info": {
    "initialization_time": 0.111343,
    "selected_config": "31d1eefdbeca-simpless-dks-masb50kmiasmdfp",
    "g_value": 27,
    "evaluated": 167,
    "expanded": 27,
    "search_time": 0.113658,
    "current_f": 27,
    "f_progression": [
      27
    ],
    "h_progression": [
      27,
      26,
      25,
      24,
      23,
      22,
      21,
      20,
      19,
      18,
      17,
      16,
      15,
      14,
      13,
      12,
      11,
      10,
      9,
      8,
      7,
      6,
      5,
      4,
      3,
      2,
      1,
      0
    ]
  }
}