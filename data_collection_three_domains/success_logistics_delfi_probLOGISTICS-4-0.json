{
  "domain": "logistics",
  "planner": "delfi",
  "problem": "probLOGISTICS-4-0.pddl",
  "timestamp": "2025-06-14T12:22:16.401447",
  "timeout_used": 480,
  "solved": true,
  "time": 9.076632738113403,
  "plan": [
    "(load-truck obj23 tru2 pos2)",
    "(load-truck obj21 tru2 pos2)",
    "(drive-truck tru2 pos2 apt2 cit2)",
    "(unload-truck obj23 tru2 apt2)",
    "(unload-truck obj21 tru2 apt2)",
    "(load-truck obj13 tru1 pos1)",
    "(load-truck obj11 tru1 pos1)",
    "(drive-truck tru1 pos1 apt1 cit1)",
    "(unload-truck obj13 tru1 apt1)",
    "(unload-truck obj11 tru1 apt1)",
    "(load-airplane obj23 apn1 apt2)",
    "(load-airplane obj21 apn1 apt2)",
    "(fly-airplane apn1 apt2 apt1)",
    "(unload-airplane obj23 apn1 apt1)",
    "(load-truck obj23 tru1 apt1)",
    "(unload-airplane obj21 apn1 apt1)",
    "(load-truck obj21 tru1 apt1)",
    "(drive-truck tru1 apt1 pos1 cit1)",
    "(unload-truck obj23 tru1 pos1)",
    "(unload-truck obj21 tru1 pos1)"
  ],
  "plan_length": 20,
  "raw": {
    "result": {
      "call": "timeout 30 planutils run delfi -- domain problem plan",
      "output": {
        "plan": "(load-truck obj23 tru2 pos2)\n(load-truck obj21 tru2 pos2)\n(drive-truck tru2 pos2 apt2 cit2)\n(unload-truck obj23 tru2 apt2)\n(unload-truck obj21 tru2 apt2)\n(load-truck obj13 tru1 pos1)\n(load-truck obj11 tru1 pos1)\n(drive-truck tru1 pos1 apt1 cit1)\n(unload-truck obj13 tru1 apt1)\n(unload-truck obj11 tru1 apt1)\n(load-airplane obj23 apn1 apt2)\n(load-airplane obj21 apn1 apt2)\n(fly-airplane apn1 apt2 apt1)\n(unload-airplane obj23 apn1 apt1)\n(load-truck obj23 tru1 apt1)\n(unload-airplane obj21 apn1 apt1)\n(load-truck obj21 tru1 apt1)\n(drive-truck tru1 apt1 pos1 cit1)\n(unload-truck obj23 tru1 pos1)\n(unload-truck obj21 tru1 pos1)\n; cost = 20 (unit cost)\n"
      },
      "output_type": "generic",
      "stderr": "Using TensorFlow backend.\n",
      "stdout": "Parsing pddl.....\nParsing pddl..: [0.010s CPU, 0.003s wall-clock]\nNormalizing task.....\nNormalizing task..: [0.000s CPU, 0.000s wall-clock]\nCreating abstract structure graph.....\nCreating abstract structure graph..: [0.010s CPU, 0.002s wall-clock]\nComputing image from given graph...\nUsing graph input file /tmp/tmp8ion39t0/abstract-structure-graph.txt\nUsing image output directory /tmp/tmp8ion39t0\nWriting abstract structure graph grayscale 8bit image.....\nGrayscale color: 255\nCreating matrix for a graph with 191 nodes..\nMatrix size when created: 294912\nMatrix created, filling with values for edges..\nPerforming bolding.\nMatrix size when 1s added: 294912\nNumber of graph nodes: 192\nShrink ratio: 3\nShrinking matrix to size 64x64..\nShrinked matrix size when created: 32768\nWriting grayscale image of size 128x128 ..\nWriting abstract structure graph grayscale 8bit image..: [0.320s CPU, 0.020s wall-clock]\nDone computing image! [0.340s CPU, 0.022s wall-clock]\n\n==== Computing an abstract structure graph from the lifted task description... ====\n\n\n==== Done computing an abstract structure graph. ====\n\n\n==== Selecting planner from learned model... ====\n\nUsing json model file /workspace/delfi/dl_model/models/lifted/model.json\nUsing h5 model file /workspace/delfi/dl_model/models/lifted/model.h5\nLoaded model from disk\nChose 31d1eefdbeca-simpless-dks-masb50kmiasmdfp\n\n==== Done selecting planner from learned model. ====\n\n\n==== Running the selected planner... ====\n\nRunning planner, call string: ['/usr/bin/python', '/workspace/delfi/fast-downward.py', '--build', 'release64', '--search-memory-limit', '7600M', '--plan-file', 'plan', 'domain', 'problem', '--symmetries', 'sym=structural_symmetries(search_symmetries=dks)', '--search', 'astar(merge_and_shrink(shrink_strategy=shrink_bisimulation(greedy=false),merge_strategy=merge_precomputed(merge_tree=miasm(abstraction=miasm_merge_and_shrink(),fallback_merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order(atomic_ts_order=reverse_level,product_ts_order=new_to_old,atomic_before_product=false)]))),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=50000,threshold_before_merge=1,max_time=900),symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)']\nINFO     Running translator.\nINFO     translator input: ['domain', 'problem']\nINFO     translator arguments: []\nINFO     translator time limit: None\nINFO     translator memory limit: None\nINFO     callstring: /usr/bin/python /workspace/delfi/builds/release64/bin/translate/translate.py domain problem\nParsing...\nParsing: [0.000s CPU, 0.002s wall-clock]\nNormalizing task... [0.000s CPU, 0.000s wall-clock]\nInstantiating...\nGenerating Datalog program... [0.000s CPU, 0.000s wall-clock]\nNormalizing Datalog program...\nNormalizing Datalog program: [0.010s CPU, 0.003s wall-clock]\nPreparing model... [0.000s CPU, 0.001s wall-clock]\nGenerated 33 rules.\nComputing model... [0.000s CPU, 0.004s wall-clock]\n198 relevant atoms\n156 auxiliary atoms\n354 final queue length\n399 total queue pushes\nCompleting instantiation... [0.000s CPU, 0.002s wall-clock]\nInstantiating: [0.010s CPU, 0.011s wall-clock]\nComputing fact groups...\nFinding invariants...\n6 initial candidates\nFinding invariants: [0.010s CPU, 0.002s wall-clock]\nChecking invariant weight... [0.000s CPU, 0.000s wall-clock]\nInstantiating groups... [0.000s CPU, 0.000s wall-clock]\nCollecting mutex groups... [0.000s CPU, 0.000s wall-clock]\nChoosing groups...\n0 uncovered facts\nChoosing groups: [0.000s CPU, 0.000s wall-clock]\nBuilding translation key... [0.000s CPU, 0.000s wall-clock]\nComputing fact groups: [0.010s CPU, 0.003s wall-clock]\nBuilding STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]\nBuilding dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]\nBuilding mutex information...\nBuilding mutex information: [0.000s CPU, 0.000s wall-clock]\nTranslating task...\nProcessing axioms...\nSimplifying axioms... [0.000s CPU, 0.000s wall-clock]\nProcessing axioms: [0.000s CPU, 0.000s wall-clock]\nTranslating task: [0.000s CPU, 0.003s wall-clock]\n0 effect conditions simplified\n0 implied preconditions added\nDetecting unreachable propositions...\n0 operators removed\n0 axioms removed\n9 propositions removed\nDetecting unreachable propositions: [0.000s CPU, 0.002s wall-clock]\nReordering and filtering variables...\n7 of 9 variables necessary.\n0 of 9 mutex groups necessary.\n54 of 78 operators necessary.\n0 of 0 axiom rules necessary.\nReordering and filtering variables: [0.000s CPU, 0.000s wall-clock]\nTranslator variables: 7\nTranslator derived variables: 0\nTranslator facts: 34\nTranslator goal facts: 4\nTranslator mutex groups: 0\nTranslator total mutex groups size: 0\nTranslator operators: 54\nTranslator axioms: 0\nTranslator task size: 255\nTranslator peak memory: 27824 KB\nWriting output... [0.000s CPU, 0.001s wall-clock]\nDone! [0.020s CPU, 0.022s wall-clock]\nINFO     Running search (release64).\nINFO     search input: output.sas\nINFO     search arguments: ['--symmetries', 'sym=structural_symmetries(search_symmetries=dks)', '--search', 'astar(merge_and_shrink(shrink_strategy=shrink_bisimulation(greedy=false),merge_strategy=merge_precomputed(merge_tree=miasm(abstraction=miasm_merge_and_shrink(),fallback_merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order(atomic_ts_order=reverse_level,product_ts_order=new_to_old,atomic_before_product=false)]))),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=50000,threshold_before_merge=1,max_time=900),symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)']\nINFO     search time limit: None\nINFO     search memory limit: 7600 MB\nINFO     search executable: /workspace/delfi/builds/release64/bin/downward\nINFO     callstring: /workspace/delfi/builds/release64/bin/downward --symmetries 'sym=structural_symmetries(search_symmetries=dks)' --search 'astar(merge_and_shrink(shrink_strategy=shrink_bisimulation(greedy=false),merge_strategy=merge_precomputed(merge_tree=miasm(abstraction=miasm_merge_and_shrink(),fallback_merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order(atomic_ts_order=reverse_level,product_ts_order=new_to_old,atomic_before_product=false)]))),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=50000,threshold_before_merge=1,max_time=900),symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)' --internal-plan-file plan < output.sas\nreading input... [t=6.8309e-05s]\ndone reading input! [t=0.000354816s]\npacking state variables...done! [t=0.0003679s]\nVariables: 7\nFactPairs: 34\nBytes per state: 4\nBuilding successor generator...done! [t=0.00047427s]\npeak memory difference for root successor generator creation: 0 KB\ntime for root successor generation creation: 2.1841e-05s\ndone initializing global data [t=0.000508804s]\nInitializing merge-and-shrink heuristic...\nMerge strategy options:\nType: precomputed\nMerge tree options: \nType: miasm\nUpdate option: use random\n\nOptions related to size limits and shrinking: \nTransition system size limit: 50000\nTransition system size limit right before merge: 50000\nThreshold to trigger shrinking right before merge: 1\n\nShrink strategy options: \nType: bisimulation\nBisimulation type: exact\nAt limit: return\n\nLabel reduction options:\nBefore merging: disabled\nBefore shrinking: enabled\nMethod: all transition systems with fixpoint computation\nSystem order: random\n\nVerbosity: verbose\n\nBuilding atomic transition systems... \ndone initializing transition system data 0.000141556\ndone building transitions 0.000228819\ndone creating transition systems 0.000257843\ndone creating mas representations 0.000265217\ndone creating distances 0.000267181\nAtomic transition system #0: computing init and goal distances using unit-cost algorithm\nAtomic transition system #1: computing init and goal distances using unit-cost algorithm\nAtomic transition system #2: computing init and goal distances using unit-cost algorithm\nAtomic transition system #3: computing init and goal distances using unit-cost algorithm\nAtomic transition system #4: computing init and goal distances using unit-cost algorithm\nAtomic transition system #5: computing init and goal distances using unit-cost algorithm\nAtomic transition system #6: computing init and goal distances using unit-cost algorithm\ndone creating FTS 0.000305363\nAtomic transition system #0: not applying abstraction (same number of states)\nAtomic transition system #1: not applying abstraction (same number of states)\nAtomic transition system #2: not applying abstraction (same number of states)\nAtomic transition system #3: not applying abstraction (same number of states)\nAtomic transition system #4: not applying abstraction (same number of states)\nAtomic transition system #5: not applying abstraction (same number of states)\nAtomic transition system #6: not applying abstraction (same number of states)\nt=0.000318547s (after computation of atomic transition systems)\n\nbuilding causal graph...done! [t=2.4596e-05s]\ndone initializing transition system data 8.8767e-05\ndone building transitions 0.000142898\ndone creating transition systems 0.000167494\ndone creating mas representations 0.00017597\ndone creating distances 0.000177603\ndone creating FTS 0.00019179\nFound a trivial variable partitioning, using fallback merge strategy\nNext pair of indices: (1, 3)\nAtomic transition system #1: 2 states, 6 arcs \nAtomic transition system #1: init h=0\nAtomic transition system #3: 7 states, 19 arcs \nAtomic transition system #3: init h=6\nt=0.000737323s (after computation of next merge)\nLabel reduction: 54 labels, 48 after reduction\nLabel reduction: 48 labels, 47 after reduction\nLabel reduction: 47 labels, 46 after reduction\nLabel reduction: 46 labels, 45 after reduction\nLabel reduction: 45 labels, 39 after reduction\nLabel reduction: 39 labels, 33 after reduction\nLabel reduction: 33 labels, 27 after reduction\nt=0.00105752s (after label reduction)\nAtomic transition system #1: current size: 2 (shrink threshold: 1)\nAtomic transition system #1: not applying abstraction (same number of states)\nAtomic transition system #3: current size: 7 (shrink threshold: 1)\nAtomic transition system #3: not applying abstraction (same number of states)\nMerging atomic transition system #1 and atomic transition system #3\nComposite transition system with 2/7 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 2/7 vars: 14 states, 62 arcs \nComposite transition system with 2/7 vars: init h=8\nDifference of init h values: 2\nt=0.00112564s (after merging)\nComposite transition system with 2/7 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 132 KB\n\nNext pair of indices: (4, 7)\nAtomic transition system #4: 7 states, 19 arcs \nAtomic transition system #4: init h=6\nComposite transition system with 2/7 vars: 14 states, 62 arcs \nComposite transition system with 2/7 vars: init h=8\nt=0.00117724s (after computation of next merge)\nLabel reduction: 27 labels, 25 after reduction\nt=0.00130682s (after label reduction)\nAtomic transition system #4: current size: 7 (shrink threshold: 1)\nAtomic transition system #4: not applying abstraction (same number of states)\nComposite transition system with 2/7 vars: current size: 14 (shrink threshold: 1)\nComposite transition system with 2/7 vars: not applying abstraction (same number of states)\nMerging atomic transition system #4 and composite transition system with 2/7 vars\nComposite transition system with 3/7 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 3/7 vars: 98 states, 574 arcs \nComposite transition system with 3/7 vars: init h=14\nDifference of init h values: 6\nt=0.00141588s (after merging)\nComposite transition system with 3/7 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 132 KB\n\nNext pair of indices: (5, 8)\nAtomic transition system #5: 7 states, 19 arcs \nAtomic transition system #5: init h=2\nComposite transition system with 3/7 vars: 98 states, 574 arcs \nComposite transition system with 3/7 vars: init h=14\nt=0.00146913s (after computation of next merge)\nLabel reduction: 25 labels, 19 after reduction\nt=0.00161183s (after label reduction)\nAtomic transition system #5: current size: 7 (shrink threshold: 1)\nAtomic transition system #5: not applying abstraction (same number of states)\nComposite transition system with 3/7 vars: current size: 98 (shrink threshold: 1)\nComposite transition system with 3/7 vars: applying abstraction (98 to 56 states)\nComposite transition system with 3/7 vars: 56 states, 308 arcs \nComposite transition system with 3/7 vars: init h=14\nt=0.00174093s (after shrinking)\nMerging atomic transition system #5 and composite transition system with 3/7 vars\nComposite transition system with 4/7 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 4/7 vars: 392 states, 2716 arcs \nComposite transition system with 4/7 vars: init h=16\nDifference of init h values: 2\nt=0.00198122s (after merging)\nComposite transition system with 4/7 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 132 KB\n\nNext pair of indices: (2, 9)\nAtomic transition system #2: 2 states, 6 arcs \nAtomic transition system #2: init h=0\nComposite transition system with 4/7 vars: 392 states, 2716 arcs \nComposite transition system with 4/7 vars: init h=16\nt=0.00207018s (after computation of next merge)\nLabel reduction: 19 labels, 13 after reduction\nt=0.00232745s (after label reduction)\nAtomic transition system #2: current size: 2 (shrink threshold: 1)\nAtomic transition system #2: not applying abstraction (same number of states)\nComposite transition system with 4/7 vars: current size: 392 (shrink threshold: 1)\nComposite transition system with 4/7 vars: not applying abstraction (same number of states)\nMerging atomic transition system #2 and composite transition system with 4/7 vars\nComposite transition system with 5/7 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 5/7 vars: 784 states, 6384 arcs \nComposite transition system with 5/7 vars: init h=17\nDifference of init h values: 1\nt=0.00378824s (after merging)\nComposite transition system with 5/7 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 272 KB\n\nNext pair of indices: (6, 10)\nAtomic transition system #6: 7 states, 19 arcs \nAtomic transition system #6: init h=2\nComposite transition system with 5/7 vars: 784 states, 6384 arcs \nComposite transition system with 5/7 vars: init h=17\nt=0.00395167s (after computation of next merge)\nLabel reduction: 13 labels, 10 after reduction\nt=0.00429274s (after label reduction)\nAtomic transition system #6: current size: 7 (shrink threshold: 1)\nAtomic transition system #6: not applying abstraction (same number of states)\nComposite transition system with 5/7 vars: current size: 784 (shrink threshold: 1)\nComposite transition system with 5/7 vars: not applying abstraction (same number of states)\nMerging atomic transition system #6 and composite transition system with 5/7 vars\nComposite transition system with 6/7 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 6/7 vars: 5488 states, 39984 arcs \nComposite transition system with 6/7 vars: init h=19\nDifference of init h values: 2\nt=0.0110533s (after merging)\nComposite transition system with 6/7 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 996 KB\n\nNext pair of indices: (0, 11)\nAtomic transition system #0: 2 states, 6 arcs \nAtomic transition system #0: init h=0\nComposite transition system with 6/7 vars: 5488 states, 39984 arcs \nComposite transition system with 6/7 vars: init h=19\nt=0.0115573s (after computation of next merge)\nLabel reduction: 10 labels, 4 after reduction\nt=0.0159787s (after label reduction)\nAtomic transition system #0: current size: 2 (shrink threshold: 1)\nAtomic transition system #0: not applying abstraction (same number of states)\nComposite transition system with 6/7 vars: current size: 5488 (shrink threshold: 1)\nComposite transition system with 6/7 vars: applying abstraction (5488 to 3136 states)\nComposite transition system with 6/7 vars: 3136 states, 21952 arcs \nComposite transition system with 6/7 vars: init h=19\nt=0.0420564s (after shrinking)\nMerging atomic transition system #0 and composite transition system with 6/7 vars\nComposite transition system with 7/7 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 7/7 vars: 6272 states, 37632 arcs \nComposite transition system with 7/7 vars: init h=20\nDifference of init h values: 1\nt=0.0455177s (after merging)\nComposite transition system with 7/7 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 1704 KB\n\nIterations with merge tiebreaking: 4\nTotal tiebreaking merge candidates: 18\nFinal transition system size: 6272\nMaximum intermediate abstraction size: 6272\nMaximum intermediate number of transitions: 39984\nInit h value improvements: [2, 6, 2, 1, 2, 1]\nCourse of label reduction: [54, 27, 25, 19, 13, 10, 4]\nCourse of miss qualified states shrinking: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nAverage imperfect shrinking: 0\nMerge order: [(1, 3), (4, 7), (5, 8), (2, 9), (6, 10), (0, 11)]\nLinear merge order\nRelative pruning per iteration: [0, 0, 0, 0, 0, 0]\nAverage relative pruning: 0\nNumber of attempts to merge for symmetries: 0\nNumber of times non-perfect shrinking interfered merging for symmetries: 0\nNumber of times pruning interfered merging for symmetries: 0\nNumber of times merging for symmetries failed for any reason: 0\nFinal peak memory increase of merge-and-shrink computation: 1704 KB\nDone initializing merge-and-shrink heuristic [0.0461874s]\n\nInitializing symmetries (eager search)\nInitializing symmetries\nUsing Bliss to find group generators\nDone initializing symmetries: 0.000135474s\nNumber of generators: 2\nNumber of identity generators (on states, not on operators): 0\nOrder of generators: [2, 2]\nSetting group in registry for DKS search\nConducting best first search with reopening closed nodes, (real) bound = 2147483647\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 20\n[g=0, 1 evaluated, 0 expanded, t=0.0474796s, 7096 KB]\nf = 20 [1 evaluated, 0 expanded, t=0.0475074s, 7096 KB]\nInitial heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 20\npruning method: stubborn sets simple\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 19\n[g=1, 3 evaluated, 1 expanded, t=0.0476176s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 18\n[g=2, 8 evaluated, 2 expanded, t=0.0476545s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 17\n[g=3, 12 evaluated, 3 expanded, t=0.0476828s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 16\n[g=4, 16 evaluated, 4 expanded, t=0.04771s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 15\n[g=5, 21 evaluated, 5 expanded, t=0.0477425s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 14\n[g=6, 28 evaluated, 6 expanded, t=0.047778s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 13\n[g=7, 33 evaluated, 7 expanded, t=0.0478074s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 12\n[g=8, 38 evaluated, 8 expanded, t=0.0478363s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 11\n[g=9, 43 evaluated, 9 expanded, t=0.0478671s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 10\n[g=10, 49 evaluated, 10 expanded, t=0.0479021s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 9\n[g=11, 56 evaluated, 11 expanded, t=0.0479346s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 8\n[g=12, 61 evaluated, 12 expanded, t=0.0479575s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 7\n[g=13, 65 evaluated, 13 expanded, t=0.0479829s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 6\n[g=14, 69 evaluated, 14 expanded, t=0.0480112s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 5\n[g=15, 73 evaluated, 15 expanded, t=0.0480394s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 4\n[g=16, 82 evaluated, 16 expanded, t=0.0480763s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 3\n[g=17, 86 evaluated, 17 expanded, t=0.0481058s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 2\n[g=18, 91 evaluated, 18 expanded, t=0.0481318s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 1\n[g=19, 96 evaluated, 19 expanded, t=0.0481646s, 7096 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 0\n[g=20, 101 evaluated, 20 expanded, t=0.0481988s, 7096 KB]\nSolution found!\nActual search time: 0.000691917s [t=0.0482903s]\nload-truck obj23 tru2 pos2 (1)\nload-truck obj21 tru2 pos2 (1)\ndrive-truck tru2 pos2 apt2 cit2 (1)\nunload-truck obj23 tru2 apt2 (1)\nunload-truck obj21 tru2 apt2 (1)\nload-truck obj13 tru1 pos1 (1)\nload-truck obj11 tru1 pos1 (1)\ndrive-truck tru1 pos1 apt1 cit1 (1)\nunload-truck obj13 tru1 apt1 (1)\nunload-truck obj11 tru1 apt1 (1)\nload-airplane obj23 apn1 apt2 (1)\nload-airplane obj21 apn1 apt2 (1)\nfly-airplane apn1 apt2 apt1 (1)\nunload-airplane obj23 apn1 apt1 (1)\nload-truck obj23 tru1 apt1 (1)\nunload-airplane obj21 apn1 apt1 (1)\nload-truck obj21 tru1 apt1 (1)\ndrive-truck tru1 apt1 pos1 cit1 (1)\nunload-truck obj23 tru1 pos1 (1)\nunload-truck obj21 tru1 pos1 (1)\nPlan length: 20 step(s).\nPlan cost: 20\nExpanded 21 state(s).\nReopened 0 state(s).\nEvaluated 103 state(s).\nEvaluations: 103\nGenerated 166 state(s).\nDead ends: 0 state(s).\nExpanded until last jump: 0 state(s).\nReopened until last jump: 0 state(s).\nEvaluated until last jump: 1 state(s).\nGenerated until last jump: 0 state(s).\nNumber of registered states: 103\ntotal successors before partial-order reduction: 166\ntotal successors after partial-order reduction: 166\nSearch time: 0.000846588s\nTotal time: 0.0482998s\nSolution found.\nPeak memory: 7096 KB\nOverall time: [0.170s CPU, 0.193s wall-clock]\n\n==== Done running the selected planner. ====\n\n"
    },
    "status": "ok"
  },
  "error": null,
  "progress_info": {
    "initialization_time": 0.0461874,
    "selected_config": "31d1eefdbeca-simpless-dks-masb50kmiasmdfp",
    "g_value": 20,
    "evaluated": 101,
    "expanded": 20,
    "search_time": 0.0481988,
    "current_f": 20,
    "f_progression": [
      20
    ],
    "h_progression": [
      20,
      19,
      18,
      17,
      16,
      15,
      14,
      13,
      12,
      11,
      10,
      9,
      8,
      7,
      6,
      5,
      4,
      3,
      2,
      1,
      0
    ]
  }
}