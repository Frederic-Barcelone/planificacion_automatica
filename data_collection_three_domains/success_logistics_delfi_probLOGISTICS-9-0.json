{
  "domain": "logistics",
  "planner": "delfi",
  "problem": "probLOGISTICS-9-0.pddl",
  "timestamp": "2025-06-14T12:22:50.350751",
  "timeout_used": 480,
  "solved": true,
  "time": 11.087560892105103,
  "plan": [
    "(load-truck obj32 tru3 pos3)",
    "(load-truck obj31 tru3 pos3)",
    "(drive-truck tru3 pos3 apt3 cit3)",
    "(unload-truck obj32 tru3 apt3)",
    "(load-truck obj22 tru2 pos2)",
    "(load-truck obj23 tru2 pos2)",
    "(load-truck obj21 tru2 pos2)",
    "(load-truck obj13 tru1 pos1)",
    "(drive-truck tru2 pos2 apt2 cit2)",
    "(unload-truck obj23 tru2 apt2)",
    "(unload-truck obj22 tru2 apt2)",
    "(unload-truck obj21 tru2 apt2)",
    "(load-airplane obj23 apn1 apt2)",
    "(load-airplane obj21 apn1 apt2)",
    "(unload-truck obj31 tru3 apt3)",
    "(drive-truck tru1 pos1 apt1 cit1)",
    "(unload-truck obj13 tru1 apt1)",
    "(load-airplane obj22 apn1 apt2)",
    "(fly-airplane apn1 apt2 apt3)",
    "(unload-airplane obj23 apn1 apt3)",
    "(load-truck obj23 tru3 apt3)",
    "(drive-truck tru3 apt3 pos3 cit3)",
    "(unload-truck obj23 tru3 pos3)",
    "(load-airplane obj32 apn1 apt3)",
    "(fly-airplane apn1 apt3 apt1)",
    "(unload-airplane obj22 apn1 apt1)",
    "(load-truck obj22 tru1 apt1)",
    "(unload-airplane obj32 apn1 apt1)",
    "(load-truck obj32 tru1 apt1)",
    "(drive-truck tru1 apt1 pos1 cit1)",
    "(unload-truck obj22 tru1 pos1)",
    "(unload-truck obj32 tru1 pos1)",
    "(unload-airplane obj21 apn1 apt1)",
    "(load-airplane obj13 apn1 apt1)",
    "(fly-airplane apn1 apt1 apt3)",
    "(unload-airplane obj13 apn1 apt3)"
  ],
  "plan_length": 36,
  "raw": {
    "result": {
      "call": "timeout 30 planutils run delfi -- domain problem plan",
      "output": {
        "plan": "(load-truck obj32 tru3 pos3)\n(load-truck obj31 tru3 pos3)\n(drive-truck tru3 pos3 apt3 cit3)\n(unload-truck obj32 tru3 apt3)\n(load-truck obj22 tru2 pos2)\n(load-truck obj23 tru2 pos2)\n(load-truck obj21 tru2 pos2)\n(load-truck obj13 tru1 pos1)\n(drive-truck tru2 pos2 apt2 cit2)\n(unload-truck obj23 tru2 apt2)\n(unload-truck obj22 tru2 apt2)\n(unload-truck obj21 tru2 apt2)\n(load-airplane obj23 apn1 apt2)\n(load-airplane obj21 apn1 apt2)\n(unload-truck obj31 tru3 apt3)\n(drive-truck tru1 pos1 apt1 cit1)\n(unload-truck obj13 tru1 apt1)\n(load-airplane obj22 apn1 apt2)\n(fly-airplane apn1 apt2 apt3)\n(unload-airplane obj23 apn1 apt3)\n(load-truck obj23 tru3 apt3)\n(drive-truck tru3 apt3 pos3 cit3)\n(unload-truck obj23 tru3 pos3)\n(load-airplane obj32 apn1 apt3)\n(fly-airplane apn1 apt3 apt1)\n(unload-airplane obj22 apn1 apt1)\n(load-truck obj22 tru1 apt1)\n(unload-airplane obj32 apn1 apt1)\n(load-truck obj32 tru1 apt1)\n(drive-truck tru1 apt1 pos1 cit1)\n(unload-truck obj22 tru1 pos1)\n(unload-truck obj32 tru1 pos1)\n(unload-airplane obj21 apn1 apt1)\n(load-airplane obj13 apn1 apt1)\n(fly-airplane apn1 apt1 apt3)\n(unload-airplane obj13 apn1 apt3)\n; cost = 36 (unit cost)\n"
      },
      "output_type": "generic",
      "stderr": "Using TensorFlow backend.\n",
      "stdout": "Parsing pddl.....\nParsing pddl..: [0.000s CPU, 0.003s wall-clock]\nNormalizing task.....\nNormalizing task..: [0.000s CPU, 0.000s wall-clock]\nCreating abstract structure graph.....\nCreating abstract structure graph..: [0.000s CPU, 0.002s wall-clock]\nComputing image from given graph...\nUsing graph input file /tmp/tmpywmz6wc3/abstract-structure-graph.txt\nUsing image output directory /tmp/tmpywmz6wc3\nWriting abstract structure graph grayscale 8bit image.....\nGrayscale color: 255\nCreating matrix for a graph with 213 nodes..\nMatrix size when created: 373248\nMatrix created, filling with values for edges..\nPerforming bolding.\nMatrix size when 1s added: 373248\nNumber of graph nodes: 216\nShrink ratio: 3\nShrinking matrix to size 72x72..\nShrinked matrix size when created: 41472\nWriting grayscale image of size 128x128 ..\nWriting abstract structure graph grayscale 8bit image..: [0.370s CPU, 0.025s wall-clock]\nDone computing image! [0.400s CPU, 0.027s wall-clock]\n\n==== Computing an abstract structure graph from the lifted task description... ====\n\n\n==== Done computing an abstract structure graph. ====\n\n\n==== Selecting planner from learned model... ====\n\nUsing json model file /workspace/delfi/dl_model/models/lifted/model.json\nUsing h5 model file /workspace/delfi/dl_model/models/lifted/model.h5\nLoaded model from disk\nChose 31d1eefdbeca-simpless-oss-masb50kmiasmdfp\n\n==== Done selecting planner from learned model. ====\n\n\n==== Running the selected planner... ====\n\nRunning planner, call string: ['/usr/bin/python', '/workspace/delfi/fast-downward.py', '--build', 'release64', '--search-memory-limit', '7600M', '--plan-file', 'plan', 'domain', 'problem', '--symmetries', 'sym=structural_symmetries(search_symmetries=oss)', '--search', 'astar(merge_and_shrink(shrink_strategy=shrink_bisimulation(greedy=false),merge_strategy=merge_precomputed(merge_tree=miasm(abstraction=miasm_merge_and_shrink(),fallback_merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order(atomic_ts_order=reverse_level,product_ts_order=new_to_old,atomic_before_product=false)]))),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=50000,threshold_before_merge=1,max_time=900,prune_unreachable_states=false),symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)']\nINFO     Running translator.\nINFO     translator input: ['domain', 'problem']\nINFO     translator arguments: []\nINFO     translator time limit: None\nINFO     translator memory limit: None\nINFO     callstring: /usr/bin/python /workspace/delfi/builds/release64/bin/translate/translate.py domain problem\nParsing...\nParsing: [0.000s CPU, 0.002s wall-clock]\nNormalizing task... [0.000s CPU, 0.000s wall-clock]\nInstantiating...\nGenerating Datalog program... [0.000s CPU, 0.001s wall-clock]\nNormalizing Datalog program...\nNormalizing Datalog program: [0.010s CPU, 0.003s wall-clock]\nPreparing model... [0.000s CPU, 0.001s wall-clock]\nGenerated 33 rules.\nComputing model... [0.000s CPU, 0.008s wall-clock]\n378 relevant atoms\n306 auxiliary atoms\n684 final queue length\n781 total queue pushes\nCompleting instantiation... [0.010s CPU, 0.006s wall-clock]\nInstantiating: [0.020s CPU, 0.019s wall-clock]\nComputing fact groups...\nFinding invariants...\n6 initial candidates\nFinding invariants: [0.000s CPU, 0.002s wall-clock]\nChecking invariant weight... [0.000s CPU, 0.000s wall-clock]\nInstantiating groups... [0.000s CPU, 0.001s wall-clock]\nCollecting mutex groups... [0.000s CPU, 0.000s wall-clock]\nChoosing groups...\n0 uncovered facts\nChoosing groups: [0.000s CPU, 0.000s wall-clock]\nBuilding translation key... [0.000s CPU, 0.000s wall-clock]\nComputing fact groups: [0.010s CPU, 0.004s wall-clock]\nBuilding STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]\nBuilding dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]\nBuilding mutex information...\nBuilding mutex information: [0.000s CPU, 0.000s wall-clock]\nTranslating task...\nProcessing axioms...\nSimplifying axioms... [0.000s CPU, 0.000s wall-clock]\nProcessing axioms: [0.000s CPU, 0.000s wall-clock]\nTranslating task: [0.000s CPU, 0.006s wall-clock]\n0 effect conditions simplified\n0 implied preconditions added\nDetecting unreachable propositions...\n0 operators removed\n0 axioms removed\n13 propositions removed\nDetecting unreachable propositions: [0.010s CPU, 0.003s wall-clock]\nReordering and filtering variables...\n13 of 13 variables necessary.\n0 of 13 mutex groups necessary.\n174 of 174 operators necessary.\n0 of 0 axiom rules necessary.\nReordering and filtering variables: [0.000s CPU, 0.001s wall-clock]\nTranslator variables: 13\nTranslator derived variables: 0\nTranslator facts: 99\nTranslator goal facts: 9\nTranslator mutex groups: 0\nTranslator total mutex groups size: 0\nTranslator operators: 174\nTranslator axioms: 0\nTranslator task size: 805\nTranslator peak memory: 28340 KB\nWriting output... [0.000s CPU, 0.001s wall-clock]\nDone! [0.040s CPU, 0.038s wall-clock]\nINFO     Running search (release64).\nINFO     search input: output.sas\nINFO     search arguments: ['--symmetries', 'sym=structural_symmetries(search_symmetries=oss)', '--search', 'astar(merge_and_shrink(shrink_strategy=shrink_bisimulation(greedy=false),merge_strategy=merge_precomputed(merge_tree=miasm(abstraction=miasm_merge_and_shrink(),fallback_merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order(atomic_ts_order=reverse_level,product_ts_order=new_to_old,atomic_before_product=false)]))),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=50000,threshold_before_merge=1,max_time=900,prune_unreachable_states=false),symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)']\nINFO     search time limit: None\nINFO     search memory limit: 7600 MB\nINFO     search executable: /workspace/delfi/builds/release64/bin/downward\nINFO     callstring: /workspace/delfi/builds/release64/bin/downward --symmetries 'sym=structural_symmetries(search_symmetries=oss)' --search 'astar(merge_and_shrink(shrink_strategy=shrink_bisimulation(greedy=false),merge_strategy=merge_precomputed(merge_tree=miasm(abstraction=miasm_merge_and_shrink(),fallback_merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order(atomic_ts_order=reverse_level,product_ts_order=new_to_old,atomic_before_product=false)]))),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=50000,threshold_before_merge=1,max_time=900,prune_unreachable_states=false),symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)' --internal-plan-file plan < output.sas\nreading input... [t=7.5411e-05s]\ndone reading input! [t=0.000739897s]\npacking state variables...done! [t=0.000754625s]\nVariables: 13\nFactPairs: 99\nBytes per state: 8\nBuilding successor generator...done! [t=0.000958928s]\npeak memory difference for root successor generator creation: 0 KB\ntime for root successor generation creation: 5.2187e-05s\ndone initializing global data [t=0.000998142s]\nInitializing merge-and-shrink heuristic...\nMerge strategy options:\nType: precomputed\nMerge tree options: \nType: miasm\nUpdate option: use random\n\nOptions related to size limits and shrinking: \nTransition system size limit: 50000\nTransition system size limit right before merge: 50000\nThreshold to trigger shrinking right before merge: 1\n\nShrink strategy options: \nType: bisimulation\nBisimulation type: exact\nAt limit: return\n\nLabel reduction options:\nBefore merging: disabled\nBefore shrinking: enabled\nMethod: all transition systems with fixpoint computation\nSystem order: random\n\nVerbosity: verbose\n===============================================================================\nWARNING! Pruning is (partially) turned off!\nThis may drastically reduce the performance of merge-and-shrink!\n===============================================================================\n\nBuilding atomic transition systems... \ndone initializing transition system data 0.000381285\ndone building transitions 0.000764955\ndone creating transition systems 0.000900599\ndone creating mas representations 0.000911249\ndone creating distances 0.000913373\nAtomic transition system #0: computing goal distances using unit-cost algorithm\nAtomic transition system #1: computing goal distances using unit-cost algorithm\nAtomic transition system #2: computing goal distances using unit-cost algorithm\nAtomic transition system #3: computing goal distances using unit-cost algorithm\nAtomic transition system #4: computing goal distances using unit-cost algorithm\nAtomic transition system #5: computing goal distances using unit-cost algorithm\nAtomic transition system #6: computing goal distances using unit-cost algorithm\nAtomic transition system #7: computing goal distances using unit-cost algorithm\nAtomic transition system #8: computing goal distances using unit-cost algorithm\nAtomic transition system #9: computing goal distances using unit-cost algorithm\nAtomic transition system #10: computing goal distances using unit-cost algorithm\nAtomic transition system #11: computing goal distances using unit-cost algorithm\nAtomic transition system #12: computing goal distances using unit-cost algorithm\ndone creating FTS 0.000955562\nAtomic transition system #0: not applying abstraction (same number of states)\nAtomic transition system #1: not applying abstraction (same number of states)\nAtomic transition system #2: not applying abstraction (same number of states)\nAtomic transition system #3: not applying abstraction (same number of states)\nAtomic transition system #4: not applying abstraction (same number of states)\nAtomic transition system #5: not applying abstraction (same number of states)\nAtomic transition system #6: not applying abstraction (same number of states)\nAtomic transition system #7: not applying abstraction (same number of states)\nAtomic transition system #8: not applying abstraction (same number of states)\nAtomic transition system #9: not applying abstraction (same number of states)\nAtomic transition system #10: not applying abstraction (same number of states)\nAtomic transition system #11: not applying abstraction (same number of states)\nAtomic transition system #12: not applying abstraction (same number of states)\nt=0.000982824s (after computation of atomic transition systems)\n\nbuilding causal graph...done! [t=2.664e-05s]\ndone initializing transition system data 0.00018151\ndone building transitions 0.000545692\ndone creating transition systems 0.000678381\ndone creating mas representations 0.00068827\ndone creating distances 0.000690274\ndone creating FTS 0.000725079\nFound a trivial variable partitioning, using fallback merge strategy\nNext pair of indices: (0, 4)\nAtomic transition system #0: 2 states, 6 arcs \nAtomic transition system #0: init h=0\nAtomic transition system #4: 10 states, 28 arcs \nAtomic transition system #4: init h=0\nt=0.00218114s (after computation of next merge)\nLabel reduction: 174 labels, 165 after reduction\nLabel reduction: 165 labels, 164 after reduction\nLabel reduction: 164 labels, 155 after reduction\nLabel reduction: 155 labels, 154 after reduction\nLabel reduction: 154 labels, 153 after reduction\nLabel reduction: 153 labels, 144 after reduction\nLabel reduction: 144 labels, 135 after reduction\nLabel reduction: 135 labels, 126 after reduction\nLabel reduction: 126 labels, 121 after reduction\nLabel reduction: 121 labels, 112 after reduction\nLabel reduction: 112 labels, 103 after reduction\nLabel reduction: 103 labels, 94 after reduction\nLabel reduction: 94 labels, 85 after reduction\nt=0.00581441s (after label reduction)\nAtomic transition system #0: current size: 2 (shrink threshold: 1)\nAtomic transition system #0: not applying abstraction (same number of states)\nAtomic transition system #4: current size: 10 (shrink threshold: 1)\nAtomic transition system #4: not applying abstraction (same number of states)\nMerging atomic transition system #0 and atomic transition system #4\nComposite transition system with 2/13 vars: computing goal distances using unit-cost algorithm\nComposite transition system with 2/13 vars: 20 states, 92 arcs \nComposite transition system with 2/13 vars: init h=0\nDifference of init h values: 0\nt=0.0059018s (after merging)\nComposite transition system with 2/13 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 932 KB\n\nNext pair of indices: (6, 13)\nAtomic transition system #6: 10 states, 28 arcs \nAtomic transition system #6: init h=2\nComposite transition system with 2/13 vars: 20 states, 92 arcs \nComposite transition system with 2/13 vars: init h=0\nt=0.00603752s (after computation of next merge)\nLabel reduction: 85 labels, 83 after reduction\nt=0.00818068s (after label reduction)\nAtomic transition system #6: current size: 10 (shrink threshold: 1)\nAtomic transition system #6: not applying abstraction (same number of states)\nComposite transition system with 2/13 vars: current size: 20 (shrink threshold: 1)\nComposite transition system with 2/13 vars: not applying abstraction (same number of states)\nMerging atomic transition system #6 and composite transition system with 2/13 vars\nComposite transition system with 3/13 vars: computing goal distances using unit-cost algorithm\nComposite transition system with 3/13 vars: 200 states, 1240 arcs \nComposite transition system with 3/13 vars: init h=3\nDifference of init h values: 1\nt=0.00836949s (after merging)\nComposite transition system with 3/13 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 932 KB\n\nNext pair of indices: (3, 14)\nAtomic transition system #3: 3 states, 12 arcs \nAtomic transition system #3: init h=0\nComposite transition system with 3/13 vars: 200 states, 1240 arcs \nComposite transition system with 3/13 vars: init h=3\nt=0.00853736s (after computation of next merge)\nLabel reduction: 83 labels, 74 after reduction\nt=0.0107019s (after label reduction)\nAtomic transition system #3: current size: 3 (shrink threshold: 1)\nAtomic transition system #3: not applying abstraction (same number of states)\nComposite transition system with 3/13 vars: current size: 200 (shrink threshold: 1)\nComposite transition system with 3/13 vars: not applying abstraction (same number of states)\nMerging atomic transition system #3 and composite transition system with 3/13 vars\nComposite transition system with 4/13 vars: computing goal distances using unit-cost algorithm\nComposite transition system with 4/13 vars: 600 states, 5040 arcs \nComposite transition system with 4/13 vars: init h=3\nDifference of init h values: 0\nt=0.0116263s (after merging)\nComposite transition system with 4/13 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 932 KB\n\nNext pair of indices: (7, 15)\nAtomic transition system #7: 10 states, 28 arcs \nAtomic transition system #7: init h=6\nComposite transition system with 4/13 vars: 600 states, 5040 arcs \nComposite transition system with 4/13 vars: init h=3\nt=0.0118851s (after computation of next merge)\nLabel reduction: 74 labels, 70 after reduction\nt=0.01379s (after label reduction)\nAtomic transition system #7: current size: 10 (shrink threshold: 1)\nAtomic transition system #7: not applying abstraction (same number of states)\nComposite transition system with 4/13 vars: current size: 600 (shrink threshold: 1)\nComposite transition system with 4/13 vars: not applying abstraction (same number of states)\nMerging atomic transition system #7 and composite transition system with 4/13 vars\nComposite transition system with 5/13 vars: computing goal distances using unit-cost algorithm\nComposite transition system with 5/13 vars: 6000 states, 57600 arcs \nComposite transition system with 5/13 vars: init h=11\nDifference of init h values: 5\nt=0.0207624s (after merging)\nComposite transition system with 5/13 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 1340 KB\n\nNext pair of indices: (9, 16)\nAtomic transition system #9: 10 states, 28 arcs \nAtomic transition system #9: init h=4\nComposite transition system with 5/13 vars: 6000 states, 57600 arcs \nComposite transition system with 5/13 vars: init h=11\nt=0.0218072s (after computation of next merge)\nLabel reduction: 70 labels, 61 after reduction\nt=0.0286743s (after label reduction)\nAtomic transition system #9: current size: 10 (shrink threshold: 1)\nAtomic transition system #9: not applying abstraction (same number of states)\nComposite transition system with 5/13 vars: current size: 6000 (new size limit: 5000)\nComposite transition system with 5/13 vars: applying abstraction (6000 to 3300 states)\nComposite transition system with 5/13 vars: 3300 states, 30960 arcs \nComposite transition system with 5/13 vars: init h=11\nt=0.0680406s (after shrinking)\nMerging atomic transition system #9 and composite transition system with 5/13 vars\nComposite transition system with 6/13 vars: computing goal distances using unit-cost algorithm\nComposite transition system with 6/13 vars: 33000 states, 349200 arcs \nComposite transition system with 6/13 vars: init h=16\nDifference of init h values: 5\nt=0.0912957s (after merging)\nComposite transition system with 6/13 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 6944 KB\n\nNext pair of indices: (2, 17)\nAtomic transition system #2: 2 states, 6 arcs \nAtomic transition system #2: init h=0\nComposite transition system with 6/13 vars: 33000 states, 349200 arcs \nComposite transition system with 6/13 vars: init h=16\nt=0.0948567s (after computation of next merge)\nLabel reduction: 61 labels, 52 after reduction\nt=0.135969s (after label reduction)\nAtomic transition system #2: current size: 2 (shrink threshold: 1)\nAtomic transition system #2: not applying abstraction (same number of states)\nComposite transition system with 6/13 vars: current size: 33000 (new size limit: 25000)\nComposite transition system with 6/13 vars: applying abstraction (33000 to 24771 states)\nComposite transition system with 6/13 vars: 24771 states, 258517 arcs \nComposite transition system with 6/13 vars: init h=16\nt=0.275041s (after shrinking)\nnot perfect anymore in iteration 5\nMerging atomic transition system #2 and composite transition system with 6/13 vars\nComposite transition system with 7/13 vars: computing goal distances using unit-cost algorithm\nComposite transition system with 7/13 vars: 49542 states, 582996 arcs \nComposite transition system with 7/13 vars: init h=16\nDifference of init h values: 0\nt=0.308991s (after merging)\nComposite transition system with 7/13 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 11428 KB\n\nNext pair of indices: (5, 18)\nAtomic transition system #5: 10 states, 28 arcs \nAtomic transition system #5: init h=6\nComposite transition system with 7/13 vars: 49542 states, 582996 arcs \nComposite transition system with 7/13 vars: init h=16\nt=0.313594s (after computation of next merge)\nLabel reduction: 52 labels, 49 after reduction\nt=0.368802s (after label reduction)\nAtomic transition system #5: current size: 10 (shrink threshold: 1)\nAtomic transition system #5: not applying abstraction (same number of states)\nComposite transition system with 7/13 vars: current size: 49542 (new size limit: 5000)\nComposite transition system with 7/13 vars: applying abstraction (49542 to 4657 states)\nComposite transition system with 7/13 vars: 4657 states, 70180 arcs \nComposite transition system with 7/13 vars: init h=16\nt=0.49611s (after shrinking)\nMerging atomic transition system #5 and composite transition system with 7/13 vars\nComposite transition system with 8/13 vars: computing goal distances using unit-cost algorithm\nComposite transition system with 8/13 vars: 46570 states, 748370 arcs \nComposite transition system with 8/13 vars: init h=22\nDifference of init h values: 6\nt=0.532807s (after merging)\nComposite transition system with 8/13 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 22764 KB\n\nNext pair of indices: (8, 19)\nAtomic transition system #8: 10 states, 28 arcs \nAtomic transition system #8: init h=6\nComposite transition system with 8/13 vars: 46570 states, 748370 arcs \nComposite transition system with 8/13 vars: init h=22\nt=0.537404s (after computation of next merge)\nLabel reduction: 49 labels, 40 after reduction\nt=0.63595s (after label reduction)\nAtomic transition system #8: current size: 10 (shrink threshold: 1)\nAtomic transition system #8: not applying abstraction (same number of states)\nComposite transition system with 8/13 vars: current size: 46570 (new size limit: 5000)\nComposite transition system with 8/13 vars: applying abstraction (46570 to 4786 states)\nComposite transition system with 8/13 vars: 4786 states, 102187 arcs \nComposite transition system with 8/13 vars: init h=22\nt=0.744594s (after shrinking)\nMerging atomic transition system #8 and composite transition system with 8/13 vars\nComposite transition system with 9/13 vars: computing goal distances using unit-cost algorithm\nComposite transition system with 9/13 vars: 47860 states, 1069810 arcs \nComposite transition system with 9/13 vars: init h=28\nDifference of init h values: 6\nt=0.801416s (after merging)\nComposite transition system with 9/13 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 31900 KB\n\nNext pair of indices: (10, 20)\nAtomic transition system #10: 10 states, 28 arcs \nAtomic transition system #10: init h=4\nComposite transition system with 9/13 vars: 47860 states, 1069810 arcs \nComposite transition system with 9/13 vars: init h=28\nt=0.806404s (after computation of next merge)\nLabel reduction: 40 labels, 31 after reduction\nt=0.98441s (after label reduction)\nAtomic transition system #10: current size: 10 (shrink threshold: 1)\nAtomic transition system #10: not applying abstraction (same number of states)\nComposite transition system with 9/13 vars: current size: 47860 (new size limit: 5000)\nComposite transition system with 9/13 vars: applying abstraction (47860 to 4668 states)\nComposite transition system with 9/13 vars: 4668 states, 122336 arcs \nComposite transition system with 9/13 vars: init h=28\nt=1.12815s (after shrinking)\nMerging atomic transition system #10 and composite transition system with 9/13 vars\nComposite transition system with 10/13 vars: computing goal distances using unit-cost algorithm\nComposite transition system with 10/13 vars: 46680 states, 1270208 arcs \nComposite transition system with 10/13 vars: init h=32\nDifference of init h values: 4\nt=1.18737s (after merging)\nComposite transition system with 10/13 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 48128 KB\n\nNext pair of indices: (11, 21)\nAtomic transition system #11: 10 states, 28 arcs \nAtomic transition system #11: init h=0\nComposite transition system with 10/13 vars: 46680 states, 1270208 arcs \nComposite transition system with 10/13 vars: init h=32\nt=1.19224s (after computation of next merge)\nLabel reduction: 31 labels, 22 after reduction\nt=1.39858s (after label reduction)\nAtomic transition system #11: current size: 10 (shrink threshold: 1)\nAtomic transition system #11: not applying abstraction (same number of states)\nComposite transition system with 10/13 vars: current size: 46680 (new size limit: 5000)\nComposite transition system with 10/13 vars: applying abstraction (46680 to 4603 states)\nComposite transition system with 10/13 vars: 4603 states, 131076 arcs \nComposite transition system with 10/13 vars: init h=32\nt=1.5481s (after shrinking)\nMerging atomic transition system #11 and composite transition system with 10/13 vars\nComposite transition system with 11/13 vars: computing goal distances using unit-cost algorithm\nComposite transition system with 11/13 vars: 46030 states, 1356998 arcs \nComposite transition system with 11/13 vars: init h=32\nDifference of init h values: 0\nt=1.6105s (after merging)\nComposite transition system with 11/13 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 59008 KB\n\nNext pair of indices: (12, 22)\nAtomic transition system #12: 10 states, 28 arcs \nAtomic transition system #12: init h=0\nComposite transition system with 11/13 vars: 46030 states, 1356998 arcs \nComposite transition system with 11/13 vars: init h=32\nt=1.61541s (after computation of next merge)\nLabel reduction: 22 labels, 13 after reduction\nt=1.83749s (after label reduction)\nAtomic transition system #12: current size: 10 (shrink threshold: 1)\nAtomic transition system #12: not applying abstraction (same number of states)\nComposite transition system with 11/13 vars: current size: 46030 (new size limit: 5000)\nComposite transition system with 11/13 vars: applying abstraction (46030 to 4579 states)\nComposite transition system with 11/13 vars: 4579 states, 130308 arcs \nComposite transition system with 11/13 vars: init h=32\nt=1.9913s (after shrinking)\nMerging atomic transition system #12 and composite transition system with 11/13 vars\nComposite transition system with 12/13 vars: computing goal distances using unit-cost algorithm\nComposite transition system with 12/13 vars: 45790 states, 1210476 arcs \nComposite transition system with 12/13 vars: init h=32\nDifference of init h values: 0\nt=2.04889s (after merging)\nComposite transition system with 12/13 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 63740 KB\n\nNext pair of indices: (1, 23)\nAtomic transition system #1: 2 states, 6 arcs \nAtomic transition system #1: init h=0\nComposite transition system with 12/13 vars: 45790 states, 1210476 arcs \nComposite transition system with 12/13 vars: init h=32\nt=2.05272s (after computation of next merge)\nLabel reduction: 13 labels, 4 after reduction\nt=2.27186s (after label reduction)\nAtomic transition system #1: current size: 2 (shrink threshold: 1)\nAtomic transition system #1: not applying abstraction (same number of states)\nComposite transition system with 12/13 vars: current size: 45790 (new size limit: 25000)\nComposite transition system with 12/13 vars: applying abstraction (45790 to 24696 states)\nComposite transition system with 12/13 vars: 24696 states, 778547 arcs \nComposite transition system with 12/13 vars: init h=32\nt=2.48876s (after shrinking)\nMerging atomic transition system #1 and composite transition system with 12/13 vars\nComposite transition system with 13/13 vars: computing goal distances using unit-cost algorithm\nComposite transition system with 13/13 vars: 49392 states, 1400177 arcs \nComposite transition system with 13/13 vars: init h=32\nDifference of init h values: 0\nt=2.55696s (after merging)\nComposite transition system with 13/13 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 63740 KB\n\nIterations with merge tiebreaking: 10\nTotal tiebreaking merge candidates: 68\nFinal transition system size: 49392\nMaximum intermediate abstraction size: 49542\nMaximum intermediate number of transitions: 1400177\nInit h value improvements: [0, 1, 0, 5, 5, 0, 6, 6, 4, 0, 0, 0]\nCourse of label reduction: [174, 85, 83, 74, 70, 61, 52, 49, 40, 31, 22, 13, 4]\nCourse of miss qualified states shrinking: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0647576, 0, 0.46728, 0, 0.631973, 0, 0.473799, 0, 0.548543, 0, 0.527743, 0, 0.417078]\nAverage imperfect shrinking: 0.130466\nMerge order: [(0, 4), (6, 13), (3, 14), (7, 15), (9, 16), (2, 17), (5, 18), (8, 19), (10, 20), (11, 21), (12, 22), (1, 23)]\nLinear merge order\nRelative pruning per iteration: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nAverage relative pruning: 0\nNumber of attempts to merge for symmetries: 0\nNumber of times non-perfect shrinking interfered merging for symmetries: 0\nNumber of times pruning interfered merging for symmetries: 0\nNumber of times merging for symmetries failed for any reason: 0\nFinal peak memory increase of merge-and-shrink computation: 63740 KB\nDone initializing merge-and-shrink heuristic [2.5618s]\n\nInitializing symmetries (eager search)\nInitializing symmetries\nUsing Bliss to find group generators\nDone initializing symmetries: 0.000416612s\nNumber of generators: 5\nNumber of identity generators (on states, not on operators): 0\nOrder of generators: [2, 2, 2, 2, 2]\nConducting best first search with reopening closed nodes, (real) bound = 2147483647\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 32\n[g=0, 1 evaluated, 0 expanded, t=2.56396s, 69264 KB]\nf = 32 [1 evaluated, 0 expanded, t=2.564s, 69264 KB]\nInitial heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 32\npruning method: stubborn sets simple\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 31\n[g=1, 4 evaluated, 1 expanded, t=2.56449s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 30\n[g=2, 17 evaluated, 2 expanded, t=2.56455s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 29\n[g=3, 27 evaluated, 3 expanded, t=2.5646s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 28\n[g=4, 38 evaluated, 4 expanded, t=2.56466s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 27\n[g=5, 52 evaluated, 5 expanded, t=2.56473s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 26\n[g=6, 63 evaluated, 6 expanded, t=2.56479s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 25\n[g=7, 74 evaluated, 7 expanded, t=2.56485s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 24\n[g=8, 87 evaluated, 8 expanded, t=2.56492s, 69264 KB]\nf = 33 [672 evaluated, 88 expanded, t=2.56648s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 23\n[g=10, 675 evaluated, 89 expanded, t=2.56652s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 22\n[g=11, 685 evaluated, 90 expanded, t=2.56659s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 21\n[g=12, 722 evaluated, 94 expanded, t=2.56671s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 20\n[g=13, 740 evaluated, 95 expanded, t=2.56678s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 19\n[g=14, 753 evaluated, 96 expanded, t=2.56685s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 18\n[g=15, 763 evaluated, 97 expanded, t=2.56691s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 17\n[g=16, 775 evaluated, 98 expanded, t=2.56696s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 16\n[g=17, 785 evaluated, 99 expanded, t=2.56703s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 15\n[g=18, 795 evaluated, 100 expanded, t=2.5671s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 14\n[g=19, 853 evaluated, 105 expanded, t=2.56727s, 69264 KB]\nf = 34 [5310 evaluated, 811 expanded, t=2.57983s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 13\n[g=21, 5498 evaluated, 837 expanded, t=2.5804s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 12\n[g=22, 5957 evaluated, 901 expanded, t=2.58174s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 11\n[g=23, 5969 evaluated, 902 expanded, t=2.5818s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 10\n[g=24, 6003 evaluated, 905 expanded, t=2.5819s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 9\n[g=25, 6008 evaluated, 906 expanded, t=2.58193s, 69264 KB]\nInsufficient pruning. Switching off.\ntotal successors before partial-order reduction: 12557\ntotal successors after partial-order reduction: 12557\nf = 35 [24441 evaluated, 4682 expanded, t=2.63227s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 8\n[g=27, 24447 evaluated, 4683 expanded, t=2.63244s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 7\n[g=28, 24453 evaluated, 4684 expanded, t=2.63248s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 6\n[g=29, 24471 evaluated, 4685 expanded, t=2.63254s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 5\n[g=30, 28144 evaluated, 5227 expanded, t=2.64057s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 4\n[g=31, 28153 evaluated, 5228 expanded, t=2.64061s, 69264 KB]\nf = 36 [79716 evaluated, 18048 expanded, 87 reopened, t=2.79816s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 3\n[g=33, 79734 evaluated, 18051 expanded, 87 reopened, t=2.79836s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 2\n[g=34, 79741 evaluated, 18052 expanded, 87 reopened, t=2.7984s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 1\n[g=35, 79748 evaluated, 18053 expanded, 87 reopened, t=2.79844s, 69264 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900, prune_unreachable_states = false): 0\n[g=36, 79754 evaluated, 18054 expanded, 87 reopened, t=2.79849s, 69264 KB]\nSolution found!\nActual search time: 0.234271s [t=2.79872s]\nload-truck obj32 tru3 pos3 (1)\nload-truck obj31 tru3 pos3 (1)\ndrive-truck tru3 pos3 apt3 cit3 (1)\nunload-truck obj32 tru3 apt3 (1)\nload-truck obj22 tru2 pos2 (1)\nload-truck obj23 tru2 pos2 (1)\nload-truck obj21 tru2 pos2 (1)\nload-truck obj13 tru1 pos1 (1)\ndrive-truck tru2 pos2 apt2 cit2 (1)\nunload-truck obj23 tru2 apt2 (1)\nunload-truck obj22 tru2 apt2 (1)\nunload-truck obj21 tru2 apt2 (1)\nload-airplane obj23 apn1 apt2 (1)\nload-airplane obj21 apn1 apt2 (1)\nunload-truck obj31 tru3 apt3 (1)\ndrive-truck tru1 pos1 apt1 cit1 (1)\nunload-truck obj13 tru1 apt1 (1)\nload-airplane obj22 apn1 apt2 (1)\nfly-airplane apn1 apt2 apt3 (1)\nunload-airplane obj23 apn1 apt3 (1)\nload-truck obj23 tru3 apt3 (1)\ndrive-truck tru3 apt3 pos3 cit3 (1)\nunload-truck obj23 tru3 pos3 (1)\nload-airplane obj32 apn1 apt3 (1)\nfly-airplane apn1 apt3 apt1 (1)\nunload-airplane obj22 apn1 apt1 (1)\nload-truck obj22 tru1 apt1 (1)\nunload-airplane obj32 apn1 apt1 (1)\nload-truck obj32 tru1 apt1 (1)\ndrive-truck tru1 apt1 pos1 cit1 (1)\nunload-truck obj22 tru1 pos1 (1)\nunload-truck obj32 tru1 pos1 (1)\nunload-airplane obj21 apn1 apt1 (1)\nload-airplane obj13 apn1 apt1 (1)\nfly-airplane apn1 apt1 apt3 (1)\nunload-airplane obj13 apn1 apt3 (1)\nPlan length: 36 step(s).\nPlan cost: 36\nExpanded 18055 state(s).\nReopened 87 state(s).\nEvaluated 79755 state(s).\nEvaluations: 79755\nGenerated 219087 state(s).\nDead ends: 0 state(s).\nExpanded until last jump: 18048 state(s).\nReopened until last jump: 87 state(s).\nEvaluated until last jump: 79716 state(s).\nGenerated until last jump: 219010 state(s).\nNumber of registered states: 80093\nSearch time: 0.234811s\nTotal time: 2.79873s\nSolution found.\nPeak memory: 69264 KB\nOverall time: [2.940s CPU, 2.948s wall-clock]\n\n==== Done running the selected planner. ====\n\n"
    },
    "status": "ok"
  },
  "error": null,
  "progress_info": {
    "initialization_time": 2.5618,
    "selected_config": "31d1eefdbeca-simpless-oss-masb50kmiasmdfp",
    "g_value": 31,
    "evaluated": 28153,
    "expanded": 5228,
    "search_time": 2.64061,
    "current_f": 36,
    "f_progression": [
      32,
      33,
      34,
      35,
      36
    ],
    "h_progression": [
      32,
      31,
      30,
      29,
      28,
      27,
      26,
      25,
      24,
      23,
      22,
      21,
      20,
      19,
      18,
      17,
      16,
      15,
      14,
      13,
      12,
      11,
      10,
      9,
      8,
      7,
      6,
      5,
      4,
      3,
      2,
      1,
      0
    ]
  }
}