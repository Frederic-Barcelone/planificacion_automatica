{
  "planner": "delfi",
  "problem": "problema_04_medio.pddl",
  "timestamp": "2025-06-13T15:38:13.560186",
  "solved": true,
  "time": 8.388176202774048,
  "plan": [
    "(unstack a g)",
    "(stack a c)",
    "(unstack g e)",
    "(stack g b)",
    "(unstack a c)",
    "(stack a g)",
    "(pick-up c)",
    "(stack c a)",
    "(unstack d h)",
    "(put-down d)",
    "(unstack h f)",
    "(stack h c)",
    "(pick-up e)",
    "(stack e h)",
    "(pick-up f)",
    "(stack f e)",
    "(pick-up d)",
    "(stack d f)"
  ],
  "plan_length": 18,
  "raw": {
    "result": {
      "call": "timeout 30 planutils run delfi -- domain problem plan",
      "output": {
        "plan": "(unstack a g)\n(stack a c)\n(unstack g e)\n(stack g b)\n(unstack a c)\n(stack a g)\n(pick-up c)\n(stack c a)\n(unstack d h)\n(put-down d)\n(unstack h f)\n(stack h c)\n(pick-up e)\n(stack e h)\n(pick-up f)\n(stack f e)\n(pick-up d)\n(stack d f)\n; cost = 18 (unit cost)\n"
      },
      "output_type": "generic",
      "stderr": "Using TensorFlow backend.\n",
      "stdout": "Parsing pddl.....\nParsing pddl..: [0.000s CPU, 0.002s wall-clock]\nNormalizing task.....\nNormalizing task..: [0.000s CPU, 0.000s wall-clock]\nCreating abstract structure graph.....\nCreating abstract structure graph..: [0.000s CPU, 0.001s wall-clock]\nComputing image from given graph...\nUsing graph input file /tmp/tmpdbb2vji3/abstract-structure-graph.txt\nUsing image output directory /tmp/tmpdbb2vji3\nWriting abstract structure graph grayscale 8bit image.....\nGrayscale color: 255\nCreating matrix for a graph with 122 nodes..\nMatrix size when created: 121032\nMatrix created, filling with values for edges..\nPerforming bolding.\nMatrix size when 1s added: 121032\nNumber of graph nodes: 123\nShrink ratio: 3\nShrinking matrix to size 41x41..\nShrinked matrix size when created: 13448\nWriting grayscale image of size 128x128 ..\nWriting abstract structure graph grayscale 8bit image..: [0.260s CPU, 0.017s wall-clock]\nDone computing image! [0.280s CPU, 0.019s wall-clock]\n\n==== Computing an abstract structure graph from the lifted task description... ====\n\n\n==== Done computing an abstract structure graph. ====\n\n\n==== Selecting planner from learned model... ====\n\nUsing json model file /workspace/delfi/dl_model/models/lifted/model.json\nUsing h5 model file /workspace/delfi/dl_model/models/lifted/model.h5\nLoaded model from disk\nChose 5652d59dafed-h2-simpless-dks-celmcut\n\n==== Done selecting planner from learned model. ====\n\n\n==== Running the selected planner... ====\n\nRunning planner, call string: ['/usr/bin/python', '/workspace/delfi/fast-downward.py', '--transform-task', 'preprocess', '--build', 'release64', '--search-memory-limit', '7600M', '--plan-file', 'plan', 'domain', 'problem', '--symmetries', 'sym=structural_symmetries(search_symmetries=dks)', '--search', 'astar(celmcut,symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)']\nINFO     Running translator.\nINFO     translator input: ['domain', 'problem']\nINFO     translator arguments: []\nINFO     translator time limit: None\nINFO     translator memory limit: None\nINFO     callstring: /usr/bin/python /workspace/delfi/builds/release64/bin/translate/translate.py domain problem\nParsing...\nParsing: [0.000s CPU, 0.002s wall-clock]\nNormalizing task... [0.000s CPU, 0.000s wall-clock]\nInstantiating...\nGenerating Datalog program... [0.000s CPU, 0.000s wall-clock]\nNormalizing Datalog program...\nNormalizing Datalog program: [0.000s CPU, 0.002s wall-clock]\nPreparing model... [0.000s CPU, 0.001s wall-clock]\nGenerated 21 rules.\nComputing model... [0.010s CPU, 0.004s wall-clock]\n250 relevant atoms\n168 auxiliary atoms\n418 final queue length\n694 total queue pushes\nCompleting instantiation... [0.010s CPU, 0.008s wall-clock]\nInstantiating: [0.020s CPU, 0.015s wall-clock]\nComputing fact groups...\nFinding invariants...\n10 initial candidates\nFinding invariants: [0.000s CPU, 0.006s wall-clock]\nChecking invariant weight... [0.000s CPU, 0.000s wall-clock]\nInstantiating groups... [0.000s CPU, 0.001s wall-clock]\nCollecting mutex groups... [0.000s CPU, 0.000s wall-clock]\nChoosing groups...\n9 uncovered facts\nChoosing groups: [0.000s CPU, 0.001s wall-clock]\nBuilding translation key... [0.000s CPU, 0.000s wall-clock]\nComputing fact groups: [0.000s CPU, 0.009s wall-clock]\nBuilding STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]\nBuilding dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]\nBuilding mutex information...\nBuilding mutex information: [0.010s CPU, 0.000s wall-clock]\nTranslating task...\nProcessing axioms...\nSimplifying axioms... [0.000s CPU, 0.000s wall-clock]\nProcessing axioms: [0.000s CPU, 0.001s wall-clock]\nTranslating task: [0.010s CPU, 0.011s wall-clock]\n184 effect conditions simplified\n0 implied preconditions added\nDetecting unreachable propositions...\n0 operators removed\n0 axioms removed\n16 propositions removed\nDetecting unreachable propositions: [0.010s CPU, 0.006s wall-clock]\nReordering and filtering variables...\n17 of 17 variables necessary.\n9 of 17 mutex groups necessary.\n128 of 128 operators necessary.\n0 of 0 axiom rules necessary.\nReordering and filtering variables: [0.000s CPU, 0.003s wall-clock]\nTranslator variables: 17\nTranslator derived variables: 0\nTranslator facts: 90\nTranslator goal facts: 7\nTranslator mutex groups: 9\nTranslator total mutex groups size: 81\nTranslator operators: 128\nTranslator axioms: 0\nTranslator task size: 1131\nTranslator peak memory: 28344 KB\nWriting output... [0.000s CPU, 0.001s wall-clock]\nDone! [0.050s CPU, 0.049s wall-clock]\nINFO     Run task transformation (preprocess).\nINFO     Absolute path: /workspace/delfi/builds/release64/bin/preprocess\nINFO     callstring: /workspace/delfi/builds/release64/bin/preprocess < output.sas\nBuilding causal graph...\nThe causal graph is not acyclic.\n17 variables of 17 necessary\n9 of 9 mutex groups necessary.\n128 of 128 operators necessary.\n0 of 0 axiom rules necessary.\nInitializing mutex computation...\nMutex computation initialized with 90 fluents.\niteration for mutex detection and operator pruning\nInitialize m_index fw\nInitialized mvalues forward: reached=289, notReached=6569, spurious=1242\nInitialize m_ops fw\nComputing mutexes...\nMutex computation finished with reached=6802, notReached=56, spurious=1242\n0 operators are spurious because were not triggered\nH^2 mutexes added fw: 56, unreachable: 0\n0 of 128 operators detected as spurious\niteration for mutex detection and operator pruning\nInitialize m_index bw\nInit values regression\nInitialized mvalues backward: reached=392, notReached=6410, spurious=1298\nInitialize m_ops bw\nComputing mutexes...\nMutex computation finished with reached=6802, notReached=0, spurious=1298\n0 operators are spurious because were not triggered\nH^2 mutexes added bw: 0, unreachable: 0\n0 of 128 operators detected as spurious\nTotal mutex and disambiguation time: 0.003522 iterations: 2\n37 of 37 mutex groups necessary.\n128 of 128 operators necessary.\n0 of 0 axiom rules necessary.\nChange id of operators: 128\nChange id of mutexes\nChange id of goals\nChange id of initial state\nRemove unreachable facts from variables: 17\n37 of 37 mutex groups necessary.\n128 of 128 operators necessary.\n0 of 0 axiom rules necessary.\nUpdating causal graph and pruning unnecessary facts\n17 variables of 17 of 17 necessary\nThe causal graph is not acyclic.\n17 variables of 17 necessary\n37 of 37 mutex groups necessary.\n128 of 128 operators necessary.\n0 of 0 axiom rules necessary.\nBuilding domain transition graphs...\nsolveable in poly time 0\nBuilding successor generator...\nPreprocessor variables: 17\nPreprocessor facts: 90\nPreprocessor derived variables: 0\nPreprocessor operators: 128\nPreprocessor mutex groups: 37\nPreprocessor task size: 1187\nWriting output...\ndone\nINFO     Running search (release64).\nINFO     search input: output.sas\nINFO     search arguments: ['--symmetries', 'sym=structural_symmetries(search_symmetries=dks)', '--search', 'astar(celmcut,symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)']\nINFO     search time limit: None\nINFO     search memory limit: 7600 MB\nINFO     search executable: /workspace/delfi/builds/release64/bin/downward\nINFO     callstring: /workspace/delfi/builds/release64/bin/downward --symmetries 'sym=structural_symmetries(search_symmetries=dks)' --search 'astar(celmcut,symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)' --internal-plan-file plan < output.sas\nreading input... [t=6.0655e-05s]\ndone reading input! [t=0.000813186s]\npacking state variables...done! [t=0.000830128s]\nVariables: 17\nFactPairs: 90\nBytes per state: 8\nBuilding successor generator...done! [t=0.000950603s]\npeak memory difference for root successor generator creation: 0 KB\ntime for root successor generation creation: 4.0005e-05s\ndone initializing global data [t=0.000983656s]\nInitializing landmark cut heuristic...\nInitializing symmetries (eager search)\nInitializing symmetries\nUsing Bliss to find group generators\nDone initializing symmetries: 0.000169027s\nNumber of generators: 0\nNumber of identity generators (on states, not on operators): 0\nOrder of generators: []\nConducting best first search with reopening closed nodes, (real) bound = 2147483647\nNew best heuristic value for celmcut: 13\n[g=0, 1 evaluated, 0 expanded, t=0.00149557s, 5524 KB]\nf = 13 [1 evaluated, 0 expanded, t=0.00152593s, 5524 KB]\nInitial heuristic value for celmcut: 13\npruning method: stubborn sets simple\nNew best heuristic value for celmcut: 12\n[g=1, 4 evaluated, 1 expanded, t=0.00215672s, 5656 KB]\nf = 14 [8 evaluated, 2 expanded, t=0.00235211s, 5656 KB]\nf = 15 [18 evaluated, 5 expanded, t=0.00280259s, 5656 KB]\nf = 16 [59 evaluated, 18 expanded, t=0.00451558s, 5656 KB]\nNew best heuristic value for celmcut: 11\n[g=5, 60 evaluated, 19 expanded, t=0.00460578s, 5656 KB]\nNew best heuristic value for celmcut: 10\n[g=6, 128 evaluated, 42 expanded, t=0.0073949s, 5656 KB]\nNew best heuristic value for celmcut: 9\n[g=7, 130 evaluated, 43 expanded, t=0.00750387s, 5656 KB]\nNew best heuristic value for celmcut: 8\n[g=8, 133 evaluated, 44 expanded, t=0.00762945s, 5656 KB]\nf = 17 [174 evaluated, 59 expanded, t=0.00932976s, 5656 KB]\nf = 18 [376 evaluated, 136 expanded, t=0.0176083s, 5656 KB]\nNew best heuristic value for celmcut: 7\n[g=11, 377 evaluated, 137 expanded, t=0.017696s, 5656 KB]\nNew best heuristic value for celmcut: 6\n[g=12, 383 evaluated, 140 expanded, t=0.0179292s, 5656 KB]\nNew best heuristic value for celmcut: 5\n[g=13, 386 evaluated, 141 expanded, t=0.0180485s, 5656 KB]\nNew best heuristic value for celmcut: 4\n[g=14, 404 evaluated, 147 expanded, t=0.0185243s, 5656 KB]\nNew best heuristic value for celmcut: 3\n[g=15, 405 evaluated, 148 expanded, t=0.0185767s, 5656 KB]\nNew best heuristic value for celmcut: 2\n[g=16, 410 evaluated, 150 expanded, t=0.0186978s, 5656 KB]\nNew best heuristic value for celmcut: 1\n[g=17, 411 evaluated, 151 expanded, t=0.0187474s, 5656 KB]\nNew best heuristic value for celmcut: 0\n[g=18, 412 evaluated, 152 expanded, t=0.0187906s, 5656 KB]\nSolution found!\nActual search time: 0.0168032s [t=0.0188077s]\nunstack a g (1)\nstack a c (1)\nunstack g e (1)\nstack g b (1)\nunstack a c (1)\nstack a g (1)\npick-up c (1)\nstack c a (1)\nunstack d h (1)\nput-down d (1)\nunstack h f (1)\nstack h c (1)\npick-up e (1)\nstack e h (1)\npick-up f (1)\nstack f e (1)\npick-up d (1)\nstack d f (1)\nPlan length: 18 step(s).\nPlan cost: 18\nExpanded 153 state(s).\nReopened 0 state(s).\nEvaluated 412 state(s).\nEvaluations: 412\nGenerated 630 state(s).\nDead ends: 0 state(s).\nExpanded until last jump: 136 state(s).\nReopened until last jump: 0 state(s).\nEvaluated until last jump: 376 state(s).\nGenerated until last jump: 576 state(s).\nNumber of registered states: 412\ntotal successors before partial-order reduction: 630\ntotal successors after partial-order reduction: 630\nSearch time: 0.0173913s\nTotal time: 0.0188173s\nSolution found.\nPeak memory: 5656 KB\nOverall time: [0.190s CPU, 0.204s wall-clock]\n\n==== Done running the selected planner. ====\n\n"
    },
    "status": "ok"
  },
  "error": null,
  "domain": "blocksworld"
}