{
  "domain": "logistics",
  "planner": "delfi",
  "problem": "probLOGISTICS-7-0.pddl",
  "timestamp": "2025-06-14T12:22:38.732375",
  "timeout_used": 480,
  "solved": true,
  "time": 9.596171140670776,
  "plan": [
    "(load-truck obj33 tru3 pos3)",
    "(load-truck obj32 tru3 pos3)",
    "(load-truck obj31 tru3 pos3)",
    "(drive-truck tru3 pos3 apt3 cit3)",
    "(unload-truck obj33 tru3 apt3)",
    "(unload-truck obj32 tru3 apt3)",
    "(unload-truck obj31 tru3 apt3)",
    "(load-truck obj23 tru2 pos2)",
    "(load-truck obj13 tru1 pos1)",
    "(load-truck obj12 tru1 pos1)",
    "(drive-truck tru1 pos1 apt1 cit1)",
    "(unload-truck obj13 tru1 apt1)",
    "(unload-truck obj12 tru1 apt1)",
    "(load-airplane obj13 apn1 apt1)",
    "(load-airplane obj12 apn1 apt1)",
    "(fly-airplane apn1 apt1 apt3)",
    "(load-airplane obj33 apn1 apt3)",
    "(load-airplane obj32 apn1 apt3)",
    "(load-airplane obj31 apn1 apt3)",
    "(unload-airplane obj13 apn1 apt3)",
    "(fly-airplane apn1 apt3 apt2)",
    "(unload-airplane obj12 apn1 apt2)",
    "(drive-truck tru2 pos2 apt2 cit2)",
    "(unload-truck obj23 tru2 apt2)",
    "(load-truck obj12 tru2 apt2)",
    "(unload-airplane obj31 apn1 apt2)",
    "(load-airplane obj23 apn1 apt2)",
    "(fly-airplane apn1 apt2 apt1)",
    "(unload-airplane obj33 apn1 apt1)",
    "(drive-truck tru2 apt2 pos2 cit2)",
    "(unload-truck obj12 tru2 pos2)",
    "(unload-airplane obj32 apn1 apt1)",
    "(load-truck obj32 tru1 apt1)",
    "(drive-truck tru1 apt1 pos1 cit1)",
    "(unload-truck obj32 tru1 pos1)",
    "(unload-airplane obj23 apn1 apt1)"
  ],
  "plan_length": 36,
  "raw": {
    "result": {
      "call": "timeout 30 planutils run delfi -- domain problem plan",
      "output": {
        "plan": "(load-truck obj33 tru3 pos3)\n(load-truck obj32 tru3 pos3)\n(load-truck obj31 tru3 pos3)\n(drive-truck tru3 pos3 apt3 cit3)\n(unload-truck obj33 tru3 apt3)\n(unload-truck obj32 tru3 apt3)\n(unload-truck obj31 tru3 apt3)\n(load-truck obj23 tru2 pos2)\n(load-truck obj13 tru1 pos1)\n(load-truck obj12 tru1 pos1)\n(drive-truck tru1 pos1 apt1 cit1)\n(unload-truck obj13 tru1 apt1)\n(unload-truck obj12 tru1 apt1)\n(load-airplane obj13 apn1 apt1)\n(load-airplane obj12 apn1 apt1)\n(fly-airplane apn1 apt1 apt3)\n(load-airplane obj33 apn1 apt3)\n(load-airplane obj32 apn1 apt3)\n(load-airplane obj31 apn1 apt3)\n(unload-airplane obj13 apn1 apt3)\n(fly-airplane apn1 apt3 apt2)\n(unload-airplane obj12 apn1 apt2)\n(drive-truck tru2 pos2 apt2 cit2)\n(unload-truck obj23 tru2 apt2)\n(load-truck obj12 tru2 apt2)\n(unload-airplane obj31 apn1 apt2)\n(load-airplane obj23 apn1 apt2)\n(fly-airplane apn1 apt2 apt1)\n(unload-airplane obj33 apn1 apt1)\n(drive-truck tru2 apt2 pos2 cit2)\n(unload-truck obj12 tru2 pos2)\n(unload-airplane obj32 apn1 apt1)\n(load-truck obj32 tru1 apt1)\n(drive-truck tru1 apt1 pos1 cit1)\n(unload-truck obj32 tru1 pos1)\n(unload-airplane obj23 apn1 apt1)\n; cost = 36 (unit cost)\n"
      },
      "output_type": "generic",
      "stderr": "Using TensorFlow backend.\n",
      "stdout": "Parsing pddl.....\nParsing pddl..: [0.000s CPU, 0.003s wall-clock]\nNormalizing task.....\nNormalizing task..: [0.000s CPU, 0.000s wall-clock]\nCreating abstract structure graph.....\nCreating abstract structure graph..: [0.000s CPU, 0.002s wall-clock]\nComputing image from given graph...\nUsing graph input file /tmp/tmpgqzl543p/abstract-structure-graph.txt\nUsing image output directory /tmp/tmpgqzl543p\nWriting abstract structure graph grayscale 8bit image.....\nGrayscale color: 255\nCreating matrix for a graph with 207 nodes..\nMatrix size when created: 352800\nMatrix created, filling with values for edges..\nPerforming bolding.\nMatrix size when 1s added: 352800\nNumber of graph nodes: 210\nShrink ratio: 3\nShrinking matrix to size 70x70..\nShrinked matrix size when created: 39200\nWriting grayscale image of size 128x128 ..\nWriting abstract structure graph grayscale 8bit image..: [0.320s CPU, 0.023s wall-clock]\nDone computing image! [0.340s CPU, 0.025s wall-clock]\n\n==== Computing an abstract structure graph from the lifted task description... ====\n\n\n==== Done computing an abstract structure graph. ====\n\n\n==== Selecting planner from learned model... ====\n\nUsing json model file /workspace/delfi/dl_model/models/lifted/model.json\nUsing h5 model file /workspace/delfi/dl_model/models/lifted/model.h5\nLoaded model from disk\nChose 31d1eefdbeca-simpless-dks-masb50kmiasmdfp\n\n==== Done selecting planner from learned model. ====\n\n\n==== Running the selected planner... ====\n\nRunning planner, call string: ['/usr/bin/python', '/workspace/delfi/fast-downward.py', '--build', 'release64', '--search-memory-limit', '7600M', '--plan-file', 'plan', 'domain', 'problem', '--symmetries', 'sym=structural_symmetries(search_symmetries=dks)', '--search', 'astar(merge_and_shrink(shrink_strategy=shrink_bisimulation(greedy=false),merge_strategy=merge_precomputed(merge_tree=miasm(abstraction=miasm_merge_and_shrink(),fallback_merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order(atomic_ts_order=reverse_level,product_ts_order=new_to_old,atomic_before_product=false)]))),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=50000,threshold_before_merge=1,max_time=900),symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)']\nINFO     Running translator.\nINFO     translator input: ['domain', 'problem']\nINFO     translator arguments: []\nINFO     translator time limit: None\nINFO     translator memory limit: None\nINFO     callstring: /usr/bin/python /workspace/delfi/builds/release64/bin/translate/translate.py domain problem\nParsing...\nParsing: [0.000s CPU, 0.002s wall-clock]\nNormalizing task... [0.000s CPU, 0.000s wall-clock]\nInstantiating...\nGenerating Datalog program... [0.000s CPU, 0.001s wall-clock]\nNormalizing Datalog program...\nNormalizing Datalog program: [0.000s CPU, 0.003s wall-clock]\nPreparing model... [0.000s CPU, 0.001s wall-clock]\nGenerated 33 rules.\nComputing model... [0.000s CPU, 0.007s wall-clock]\n378 relevant atoms\n306 auxiliary atoms\n684 final queue length\n781 total queue pushes\nCompleting instantiation... [0.010s CPU, 0.006s wall-clock]\nInstantiating: [0.010s CPU, 0.018s wall-clock]\nComputing fact groups...\nFinding invariants...\n6 initial candidates\nFinding invariants: [0.000s CPU, 0.002s wall-clock]\nChecking invariant weight... [0.000s CPU, 0.000s wall-clock]\nInstantiating groups... [0.000s CPU, 0.001s wall-clock]\nCollecting mutex groups... [0.000s CPU, 0.000s wall-clock]\nChoosing groups...\n0 uncovered facts\nChoosing groups: [0.000s CPU, 0.000s wall-clock]\nBuilding translation key... [0.000s CPU, 0.000s wall-clock]\nComputing fact groups: [0.000s CPU, 0.004s wall-clock]\nBuilding STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]\nBuilding dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]\nBuilding mutex information...\nBuilding mutex information: [0.000s CPU, 0.000s wall-clock]\nTranslating task...\nProcessing axioms...\nSimplifying axioms... [0.000s CPU, 0.000s wall-clock]\nProcessing axioms: [0.000s CPU, 0.000s wall-clock]\nTranslating task: [0.010s CPU, 0.006s wall-clock]\n0 effect conditions simplified\n0 implied preconditions added\nDetecting unreachable propositions...\n0 operators removed\n0 axioms removed\n13 propositions removed\nDetecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]\nReordering and filtering variables...\n11 of 13 variables necessary.\n0 of 13 mutex groups necessary.\n138 of 174 operators necessary.\n0 of 0 axiom rules necessary.\nReordering and filtering variables: [0.000s CPU, 0.001s wall-clock]\nTranslator variables: 11\nTranslator derived variables: 0\nTranslator facts: 79\nTranslator goal facts: 7\nTranslator mutex groups: 0\nTranslator total mutex groups size: 0\nTranslator operators: 138\nTranslator axioms: 0\nTranslator task size: 637\nTranslator peak memory: 28336 KB\nWriting output... [0.000s CPU, 0.001s wall-clock]\nDone! [0.040s CPU, 0.036s wall-clock]\nINFO     Running search (release64).\nINFO     search input: output.sas\nINFO     search arguments: ['--symmetries', 'sym=structural_symmetries(search_symmetries=dks)', '--search', 'astar(merge_and_shrink(shrink_strategy=shrink_bisimulation(greedy=false),merge_strategy=merge_precomputed(merge_tree=miasm(abstraction=miasm_merge_and_shrink(),fallback_merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order(atomic_ts_order=reverse_level,product_ts_order=new_to_old,atomic_before_product=false)]))),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=50000,threshold_before_merge=1,max_time=900),symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)']\nINFO     search time limit: None\nINFO     search memory limit: 7600 MB\nINFO     search executable: /workspace/delfi/builds/release64/bin/downward\nINFO     callstring: /workspace/delfi/builds/release64/bin/downward --symmetries 'sym=structural_symmetries(search_symmetries=dks)' --search 'astar(merge_and_shrink(shrink_strategy=shrink_bisimulation(greedy=false),merge_strategy=merge_precomputed(merge_tree=miasm(abstraction=miasm_merge_and_shrink(),fallback_merge_selector=score_based_filtering(scoring_functions=[goal_relevance,dfp,total_order(atomic_ts_order=reverse_level,product_ts_order=new_to_old,atomic_before_product=false)]))),label_reduction=exact(before_shrinking=true,before_merging=false),max_states=50000,threshold_before_merge=1,max_time=900),symmetries=sym,pruning=stubborn_sets_simple(minimum_pruning_ratio=0.01),num_por_probes=1000)' --internal-plan-file plan < output.sas\nreading input... [t=7.8526e-05s]\ndone reading input! [t=0.000630612s]\npacking state variables...done! [t=0.000648425s]\nVariables: 11\nFactPairs: 79\nBytes per state: 8\nBuilding successor generator...done! [t=0.000824035s]\npeak memory difference for root successor generator creation: 0 KB\ntime for root successor generation creation: 6.1496e-05s\ndone initializing global data [t=0.000873668s]\nInitializing merge-and-shrink heuristic...\nMerge strategy options:\nType: precomputed\nMerge tree options: \nType: miasm\nUpdate option: use random\n\nOptions related to size limits and shrinking: \nTransition system size limit: 50000\nTransition system size limit right before merge: 50000\nThreshold to trigger shrinking right before merge: 1\n\nShrink strategy options: \nType: bisimulation\nBisimulation type: exact\nAt limit: return\n\nLabel reduction options:\nBefore merging: disabled\nBefore shrinking: enabled\nMethod: all transition systems with fixpoint computation\nSystem order: random\n\nVerbosity: verbose\n\nBuilding atomic transition systems... \ndone initializing transition system data 0.00035187\ndone building transitions 0.000717475\ndone creating transition systems 0.0008267\ndone creating mas representations 0.000838662\ndone creating distances 0.000841067\nAtomic transition system #0: computing init and goal distances using unit-cost algorithm\nAtomic transition system #1: computing init and goal distances using unit-cost algorithm\nAtomic transition system #2: computing init and goal distances using unit-cost algorithm\nAtomic transition system #3: computing init and goal distances using unit-cost algorithm\nAtomic transition system #4: computing init and goal distances using unit-cost algorithm\nAtomic transition system #5: computing init and goal distances using unit-cost algorithm\nAtomic transition system #6: computing init and goal distances using unit-cost algorithm\nAtomic transition system #7: computing init and goal distances using unit-cost algorithm\nAtomic transition system #8: computing init and goal distances using unit-cost algorithm\nAtomic transition system #9: computing init and goal distances using unit-cost algorithm\nAtomic transition system #10: computing init and goal distances using unit-cost algorithm\ndone creating FTS 0.000908764\nAtomic transition system #0: not applying abstraction (same number of states)\nAtomic transition system #1: not applying abstraction (same number of states)\nAtomic transition system #2: not applying abstraction (same number of states)\nAtomic transition system #3: not applying abstraction (same number of states)\nAtomic transition system #4: not applying abstraction (same number of states)\nAtomic transition system #5: not applying abstraction (same number of states)\nAtomic transition system #6: not applying abstraction (same number of states)\nAtomic transition system #7: not applying abstraction (same number of states)\nAtomic transition system #8: not applying abstraction (same number of states)\nAtomic transition system #9: not applying abstraction (same number of states)\nAtomic transition system #10: not applying abstraction (same number of states)\nt=0.000930204s (after computation of atomic transition systems)\n\nbuilding causal graph...done! [t=2.0137e-05s]\ndone initializing transition system data 0.000193453\ndone building transitions 0.00058614\ndone creating transition systems 0.000689323\ndone creating mas representations 0.00069845\ndone creating distances 0.000700413\ndone creating FTS 0.000728797\nFound a trivial variable partitioning, using fallback merge strategy\nNext pair of indices: (0, 9)\nAtomic transition system #0: 2 states, 6 arcs \nAtomic transition system #0: init h=0\nAtomic transition system #9: 10 states, 28 arcs \nAtomic transition system #9: init h=4\nt=0.00209587s (after computation of next merge)\nLabel reduction: 138 labels, 137 after reduction\nLabel reduction: 137 labels, 128 after reduction\nLabel reduction: 128 labels, 127 after reduction\nLabel reduction: 127 labels, 126 after reduction\nLabel reduction: 126 labels, 117 after reduction\nLabel reduction: 117 labels, 108 after reduction\nLabel reduction: 108 labels, 103 after reduction\nLabel reduction: 103 labels, 94 after reduction\nLabel reduction: 94 labels, 85 after reduction\nLabel reduction: 85 labels, 76 after reduction\nLabel reduction: 76 labels, 67 after reduction\nt=0.00384188s (after label reduction)\nAtomic transition system #0: current size: 2 (shrink threshold: 1)\nAtomic transition system #0: not applying abstraction (same number of states)\nAtomic transition system #9: current size: 10 (shrink threshold: 1)\nAtomic transition system #9: not applying abstraction (same number of states)\nMerging atomic transition system #0 and atomic transition system #9\nComposite transition system with 2/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 2/11 vars: 20 states, 92 arcs \nComposite transition system with 2/11 vars: init h=4\nDifference of init h values: 0\nt=0.00391886s (after merging)\nComposite transition system with 2/11 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 660 KB\n\nNext pair of indices: (3, 11)\nAtomic transition system #3: 3 states, 12 arcs \nAtomic transition system #3: init h=0\nComposite transition system with 2/11 vars: 20 states, 92 arcs \nComposite transition system with 2/11 vars: init h=4\nt=0.00399772s (after computation of next merge)\nLabel reduction: 67 labels, 65 after reduction\nt=0.00462201s (after label reduction)\nAtomic transition system #3: current size: 3 (shrink threshold: 1)\nAtomic transition system #3: not applying abstraction (same number of states)\nComposite transition system with 2/11 vars: current size: 20 (shrink threshold: 1)\nComposite transition system with 2/11 vars: not applying abstraction (same number of states)\nMerging atomic transition system #3 and composite transition system with 2/11 vars\nComposite transition system with 3/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 3/11 vars: 60 states, 432 arcs \nComposite transition system with 3/11 vars: init h=5\nDifference of init h values: 1\nt=0.00472753s (after merging)\nComposite transition system with 3/11 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 660 KB\n\nNext pair of indices: (4, 12)\nAtomic transition system #4: 10 states, 28 arcs \nAtomic transition system #4: init h=4\nComposite transition system with 3/11 vars: 60 states, 432 arcs \nComposite transition system with 3/11 vars: init h=5\nt=0.00479721s (after computation of next merge)\nLabel reduction: 65 labels, 61 after reduction\nt=0.005245s (after label reduction)\nAtomic transition system #4: current size: 10 (shrink threshold: 1)\nAtomic transition system #4: not applying abstraction (same number of states)\nComposite transition system with 3/11 vars: current size: 60 (shrink threshold: 1)\nComposite transition system with 3/11 vars: not applying abstraction (same number of states)\nMerging atomic transition system #4 and composite transition system with 3/11 vars\nComposite transition system with 4/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 4/11 vars: 600 states, 5040 arcs \nComposite transition system with 4/11 vars: init h=11\nDifference of init h values: 6\nt=0.00571416s (after merging)\nComposite transition system with 4/11 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 660 KB\n\nNext pair of indices: (2, 13)\nAtomic transition system #2: 2 states, 6 arcs \nAtomic transition system #2: init h=0\nComposite transition system with 4/11 vars: 600 states, 5040 arcs \nComposite transition system with 4/11 vars: init h=11\nt=0.00585401s (after computation of next merge)\nLabel reduction: 61 labels, 52 after reduction\nt=0.00670761s (after label reduction)\nAtomic transition system #2: current size: 2 (shrink threshold: 1)\nAtomic transition system #2: not applying abstraction (same number of states)\nComposite transition system with 4/11 vars: current size: 600 (shrink threshold: 1)\nComposite transition system with 4/11 vars: not applying abstraction (same number of states)\nMerging atomic transition system #2 and composite transition system with 4/11 vars\nComposite transition system with 5/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 5/11 vars: 1200 states, 12000 arcs \nComposite transition system with 5/11 vars: init h=12\nDifference of init h values: 1\nt=0.00885316s (after merging)\nComposite transition system with 5/11 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 660 KB\n\nNext pair of indices: (5, 14)\nAtomic transition system #5: 10 states, 28 arcs \nAtomic transition system #5: init h=6\nComposite transition system with 5/11 vars: 1200 states, 12000 arcs \nComposite transition system with 5/11 vars: init h=12\nt=0.00908838s (after computation of next merge)\nLabel reduction: 52 labels, 49 after reduction\nt=0.0101827s (after label reduction)\nAtomic transition system #5: current size: 10 (shrink threshold: 1)\nAtomic transition system #5: not applying abstraction (same number of states)\nComposite transition system with 5/11 vars: current size: 1200 (shrink threshold: 1)\nComposite transition system with 5/11 vars: not applying abstraction (same number of states)\nMerging atomic transition system #5 and composite transition system with 5/11 vars\nComposite transition system with 6/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 6/11 vars: 12000 states, 132000 arcs \nComposite transition system with 6/11 vars: init h=19\nDifference of init h values: 7\nt=0.0255047s (after merging)\nComposite transition system with 6/11 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 2704 KB\n\nNext pair of indices: (6, 15)\nAtomic transition system #6: 10 states, 28 arcs \nAtomic transition system #6: init h=4\nComposite transition system with 6/11 vars: 12000 states, 132000 arcs \nComposite transition system with 6/11 vars: init h=19\nt=0.0266814s (after computation of next merge)\nLabel reduction: 49 labels, 40 after reduction\nt=0.0403146s (after label reduction)\nAtomic transition system #6: current size: 10 (shrink threshold: 1)\nAtomic transition system #6: not applying abstraction (same number of states)\nComposite transition system with 6/11 vars: current size: 12000 (new size limit: 5000)\nComposite transition system with 6/11 vars: applying abstraction (12000 to 4613 states)\nComposite transition system with 6/11 vars: simplification was not f-preserving!\nComposite transition system with 6/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 6/11 vars: 4613 states, 56344 arcs \nComposite transition system with 6/11 vars: init h=19\nt=0.0706945s (after shrinking)\nnot perfect anymore in iteration 5\nMerging atomic transition system #6 and composite transition system with 6/11 vars\nComposite transition system with 7/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 7/11 vars: 46130 states, 609570 arcs \nComposite transition system with 7/11 vars: init h=24\nDifference of init h values: 5\nt=0.122504s (after merging)\nComposite transition system with 7/11 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 11064 KB\n\nNext pair of indices: (1, 16)\nAtomic transition system #1: 2 states, 6 arcs \nAtomic transition system #1: init h=0\nComposite transition system with 7/11 vars: 46130 states, 609570 arcs \nComposite transition system with 7/11 vars: init h=24\nt=0.126841s (after computation of next merge)\nLabel reduction: 40 labels, 31 after reduction\nt=0.214959s (after label reduction)\nAtomic transition system #1: current size: 2 (shrink threshold: 1)\nAtomic transition system #1: not applying abstraction (same number of states)\nComposite transition system with 7/11 vars: current size: 46130 (new size limit: 25000)\nComposite transition system with 7/11 vars: applying abstraction (46130 to 24642 states)\nComposite transition system with 7/11 vars: simplification was not f-preserving!\nComposite transition system with 7/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 7/11 vars: 24642 states, 348341 arcs \nComposite transition system with 7/11 vars: init h=24\nt=0.351613s (after shrinking)\nMerging atomic transition system #1 and composite transition system with 7/11 vars\nComposite transition system with 8/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 8/11 vars: 49284 states, 706032 arcs \nComposite transition system with 8/11 vars: init h=24\nDifference of init h values: 0\nt=0.401822s (after merging)\nComposite transition system with 8/11 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 24908 KB\n\nNext pair of indices: (7, 17)\nAtomic transition system #7: 10 states, 28 arcs \nAtomic transition system #7: init h=4\nComposite transition system with 8/11 vars: 49284 states, 706032 arcs \nComposite transition system with 8/11 vars: init h=24\nt=0.406471s (after computation of next merge)\nLabel reduction: 31 labels, 28 after reduction\nt=0.50053s (after label reduction)\nAtomic transition system #7: current size: 10 (shrink threshold: 1)\nAtomic transition system #7: not applying abstraction (same number of states)\nComposite transition system with 8/11 vars: current size: 49284 (new size limit: 5000)\nComposite transition system with 8/11 vars: applying abstraction (49284 to 4478 states)\nComposite transition system with 8/11 vars: simplification was not f-preserving!\nComposite transition system with 8/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 8/11 vars: 4478 states, 69842 arcs \nComposite transition system with 8/11 vars: init h=24\nt=0.625043s (after shrinking)\nMerging atomic transition system #7 and composite transition system with 8/11 vars\nComposite transition system with 9/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 9/11 vars: 44780 states, 734244 arcs \nComposite transition system with 9/11 vars: init h=28\nDifference of init h values: 4\nt=0.674833s (after merging)\nComposite transition system with 9/11 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 34188 KB\n\nNext pair of indices: (8, 18)\nAtomic transition system #8: 10 states, 28 arcs \nAtomic transition system #8: init h=0\nComposite transition system with 9/11 vars: 44780 states, 734244 arcs \nComposite transition system with 9/11 vars: init h=28\nt=0.679096s (after computation of next merge)\nLabel reduction: 28 labels, 19 after reduction\nt=0.795874s (after label reduction)\nAtomic transition system #8: current size: 10 (shrink threshold: 1)\nAtomic transition system #8: not applying abstraction (same number of states)\nComposite transition system with 9/11 vars: current size: 44780 (new size limit: 5000)\nComposite transition system with 9/11 vars: applying abstraction (44780 to 4548 states)\nComposite transition system with 9/11 vars: simplification was not f-preserving!\nComposite transition system with 9/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 9/11 vars: 4548 states, 80712 arcs \nComposite transition system with 9/11 vars: init h=28\nt=0.954728s (after shrinking)\nMerging atomic transition system #8 and composite transition system with 9/11 vars\nComposite transition system with 10/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 10/11 vars: 45480 states, 843504 arcs \nComposite transition system with 10/11 vars: init h=28\nDifference of init h values: 0\nt=1.01346s (after merging)\nComposite transition system with 10/11 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 37104 KB\n\nNext pair of indices: (10, 19)\nAtomic transition system #10: 10 states, 28 arcs \nAtomic transition system #10: init h=6\nComposite transition system with 10/11 vars: 45480 states, 843504 arcs \nComposite transition system with 10/11 vars: init h=28\nt=1.01722s (after computation of next merge)\nLabel reduction: 19 labels, 10 after reduction\nt=1.15173s (after label reduction)\nAtomic transition system #10: current size: 10 (shrink threshold: 1)\nAtomic transition system #10: not applying abstraction (same number of states)\nComposite transition system with 10/11 vars: current size: 45480 (new size limit: 5000)\nComposite transition system with 10/11 vars: applying abstraction (45480 to 4141 states)\nComposite transition system with 10/11 vars: simplification was not f-preserving!\nComposite transition system with 10/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 10/11 vars: 4141 states, 85144 arcs \nComposite transition system with 10/11 vars: init h=28\nt=1.2888s (after shrinking)\nMerging atomic transition system #10 and composite transition system with 10/11 vars\nComposite transition system with 11/11 vars: computing init and goal distances using unit-cost algorithm\nComposite transition system with 11/11 vars: 41410 states, 718928 arcs \nComposite transition system with 11/11 vars: init h=34\nDifference of init h values: 6\nt=1.33623s (after merging)\nComposite transition system with 11/11 vars: not applying abstraction (same number of states)\nCurrent peak memory increase of merge-and-shrink computation: 43988 KB\n\nIterations with merge tiebreaking: 9\nTotal tiebreaking merge candidates: 58\nFinal transition system size: 41410\nMaximum intermediate abstraction size: 49284\nMaximum intermediate number of transitions: 843504\nInit h value improvements: [0, 1, 6, 1, 7, 5, 0, 4, 0, 6]\nCourse of label reduction: [138, 67, 65, 61, 52, 49, 40, 31, 28, 19, 10]\nCourse of miss qualified states shrinking: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.30625, 0, 0.406157, 0, 0.638808, 0, 0.617619, 0, 0.623087]\nAverage imperfect shrinking: 0.129596\nMerge order: [(0, 9), (3, 11), (4, 12), (2, 13), (5, 14), (6, 15), (1, 16), (7, 17), (8, 18), (10, 19)]\nLinear merge order\nRelative pruning per iteration: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nAverage relative pruning: 0\nNumber of attempts to merge for symmetries: 0\nNumber of times non-perfect shrinking interfered merging for symmetries: 0\nNumber of times pruning interfered merging for symmetries: 0\nNumber of times merging for symmetries failed for any reason: 0\nFinal peak memory increase of merge-and-shrink computation: 43988 KB\nDone initializing merge-and-shrink heuristic [1.3405s]\n\nInitializing symmetries (eager search)\nInitializing symmetries\nUsing Bliss to find group generators\nDone initializing symmetries: 0.000256521s\nNumber of generators: 2\nNumber of identity generators (on states, not on operators): 0\nOrder of generators: [2, 2]\nSetting group in registry for DKS search\nConducting best first search with reopening closed nodes, (real) bound = 2147483647\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 34\n[g=0, 1 evaluated, 0 expanded, t=1.34237s, 49512 KB]\nf = 34 [1 evaluated, 0 expanded, t=1.3424s, 49512 KB]\nInitial heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 34\npruning method: stubborn sets simple\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 33\n[g=1, 3 evaluated, 1 expanded, t=1.3428s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 32\n[g=2, 15 evaluated, 2 expanded, t=1.34288s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 31\n[g=3, 25 evaluated, 3 expanded, t=1.34293s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 30\n[g=4, 35 evaluated, 4 expanded, t=1.34297s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 29\n[g=5, 46 evaluated, 5 expanded, t=1.34302s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 28\n[g=6, 57 evaluated, 6 expanded, t=1.34307s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 27\n[g=7, 69 evaluated, 7 expanded, t=1.34311s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 26\n[g=8, 78 evaluated, 8 expanded, t=1.34318s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 25\n[g=9, 97 evaluated, 10 expanded, t=1.34325s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 24\n[g=10, 107 evaluated, 11 expanded, t=1.34329s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 23\n[g=11, 120 evaluated, 12 expanded, t=1.34334s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 22\n[g=12, 786 evaluated, 108 expanded, t=1.34469s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 21\n[g=13, 796 evaluated, 109 expanded, t=1.34474s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 20\n[g=14, 805 evaluated, 110 expanded, t=1.34479s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 19\n[g=15, 818 evaluated, 111 expanded, t=1.34484s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 18\n[g=16, 829 evaluated, 112 expanded, t=1.3449s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 17\n[g=17, 839 evaluated, 113 expanded, t=1.34495s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 16\n[g=18, 846 evaluated, 114 expanded, t=1.34499s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 15\n[g=19, 1074 evaluated, 136 expanded, t=1.3454s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 14\n[g=20, 1082 evaluated, 137 expanded, t=1.34543s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 13\n[g=21, 1096 evaluated, 138 expanded, t=1.34548s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 12\n[g=22, 1307 evaluated, 158 expanded, t=1.34584s, 49512 KB]\nInsufficient pruning. Switching off.\ntotal successors before partial-order reduction: 12545\ntotal successors after partial-order reduction: 12545\nf = 35 [7994 evaluated, 1186 expanded, t=1.35993s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 11\n[g=24, 8004 evaluated, 1188 expanded, t=1.36001s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 10\n[g=25, 8015 evaluated, 1189 expanded, t=1.36005s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 9\n[g=26, 8032 evaluated, 1190 expanded, t=1.3601s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 8\n[g=27, 8044 evaluated, 1191 expanded, t=1.36015s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 7\n[g=28, 8051 evaluated, 1192 expanded, t=1.36018s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 6\n[g=29, 8060 evaluated, 1193 expanded, t=1.36022s, 49512 KB]\nf = 36 [33478 evaluated, 6040 expanded, t=1.41165s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 5\n[g=31, 33489 evaluated, 6042 expanded, t=1.41178s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 4\n[g=32, 33504 evaluated, 6043 expanded, t=1.41188s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 3\n[g=33, 33511 evaluated, 6044 expanded, t=1.41192s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 2\n[g=34, 33520 evaluated, 6045 expanded, t=1.41196s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 1\n[g=35, 33530 evaluated, 6046 expanded, t=1.412s, 49512 KB]\nNew best heuristic value for merge_and_shrink(shrink_strategy = shrink_bisimulation(greedy = false), merge_strategy = merge_precomputed(merge_tree = miasm(abstraction = miasm_merge_and_shrink, fallback_merge_selector = score_based_filtering(scoring_functions = list(goal_relevance, dfp, total_order(atomic_ts_order = reverse_level, product_ts_order = new_to_old, atomic_before_product = false))))), label_reduction = exact(before_shrinking = true, before_merging = false), max_states = 50000, threshold_before_merge = 1, max_time = 900): 0\n[g=36, 33543 evaluated, 6047 expanded, t=1.41204s, 49512 KB]\nSolution found!\nActual search time: 0.0694578s [t=1.41222s]\nload-truck obj33 tru3 pos3 (1)\nload-truck obj32 tru3 pos3 (1)\nload-truck obj31 tru3 pos3 (1)\ndrive-truck tru3 pos3 apt3 cit3 (1)\nunload-truck obj33 tru3 apt3 (1)\nunload-truck obj32 tru3 apt3 (1)\nunload-truck obj31 tru3 apt3 (1)\nload-truck obj23 tru2 pos2 (1)\nload-truck obj13 tru1 pos1 (1)\nload-truck obj12 tru1 pos1 (1)\ndrive-truck tru1 pos1 apt1 cit1 (1)\nunload-truck obj13 tru1 apt1 (1)\nunload-truck obj12 tru1 apt1 (1)\nload-airplane obj13 apn1 apt1 (1)\nload-airplane obj12 apn1 apt1 (1)\nfly-airplane apn1 apt1 apt3 (1)\nload-airplane obj33 apn1 apt3 (1)\nload-airplane obj32 apn1 apt3 (1)\nload-airplane obj31 apn1 apt3 (1)\nunload-airplane obj13 apn1 apt3 (1)\nfly-airplane apn1 apt3 apt2 (1)\nunload-airplane obj12 apn1 apt2 (1)\ndrive-truck tru2 pos2 apt2 cit2 (1)\nunload-truck obj23 tru2 apt2 (1)\nload-truck obj12 tru2 apt2 (1)\nunload-airplane obj31 apn1 apt2 (1)\nload-airplane obj23 apn1 apt2 (1)\nfly-airplane apn1 apt2 apt1 (1)\nunload-airplane obj33 apn1 apt1 (1)\ndrive-truck tru2 apt2 pos2 cit2 (1)\nunload-truck obj12 tru2 pos2 (1)\nunload-airplane obj32 apn1 apt1 (1)\nload-truck obj32 tru1 apt1 (1)\ndrive-truck tru1 apt1 pos1 cit1 (1)\nunload-truck obj32 tru1 pos1 (1)\nunload-airplane obj23 apn1 apt1 (1)\nPlan length: 36 step(s).\nPlan cost: 36\nExpanded 6048 state(s).\nReopened 0 state(s).\nEvaluated 33543 state(s).\nEvaluations: 33543\nGenerated 72237 state(s).\nDead ends: 0 state(s).\nExpanded until last jump: 6040 state(s).\nReopened until last jump: 0 state(s).\nEvaluated until last jump: 33478 state(s).\nGenerated until last jump: 72155 state(s).\nNumber of registered states: 33543\nSearch time: 0.0699027s\nTotal time: 1.41223s\nSolution found.\nPeak memory: 49512 KB\nOverall time: [1.540s CPU, 1.552s wall-clock]\n\n==== Done running the selected planner. ====\n\n"
    },
    "status": "ok"
  },
  "error": null,
  "progress_info": {
    "initialization_time": 1.3405,
    "selected_config": "31d1eefdbeca-simpless-dks-masb50kmiasmdfp",
    "g_value": 36,
    "evaluated": 33543,
    "expanded": 6047,
    "search_time": 1.41204,
    "current_f": 36,
    "f_progression": [
      34,
      35,
      36
    ],
    "h_progression": [
      34,
      33,
      32,
      31,
      30,
      29,
      28,
      27,
      26,
      25,
      24,
      23,
      22,
      21,
      20,
      19,
      18,
      17,
      16,
      15,
      14,
      13,
      12,
      11,
      10,
      9,
      8,
      7,
      6,
      5,
      4,
      3,
      2,
      1,
      0
    ]
  }
}